<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秒西</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.myzwl.win/"/>
  <updated>2017-11-30T05:20:58.000Z</updated>
  <id>http://www.myzwl.win/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腾讯云linux服务器上搭建javaweb站点</title>
    <link href="http://www.myzwl.win/2017/11/03/linux_2/"/>
    <id>http://www.myzwl.win/2017/11/03/linux_2/</id>
    <published>2017-11-03T06:48:51.000Z</published>
    <updated>2017-11-30T05:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>我一直坚信没有过程就不会有好的结果。回顾大学期间的学习历程，关于别人访问自己的站点，从刚开始的基于swing的cs系统，到基于socket的聊天框，再到局域网访问的web与在分别虚拟机和双系统的linux下搭建web，到后来基于nat123的p2p访问，再到后来阿里云的window8 server服务器搭建java web站点，到最后的腾讯云linux服务器集成，每一次的探索，都是与踩坑做斗战，也是进步最快的方法。不多说，这里记录一下之前搭建的步骤</p>
<h4 id="远程连接工具"><a href="#远程连接工具" class="headerlink" title="远程连接工具"></a>远程连接工具</h4><p>故名思议，举世通过远程的方式去连接Linux并操作它，Linux远程的操作工具有很多。像xshell、Puttty、secureCRT、SSH Secure等，一般情况下习惯用命令去控制，所以这里选择了SSH Secure。该工具是免费的图形化界面及命令行窗口集一身的远程工具，具体可以去网上下载。</p>
<h4 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h4><p>步骤：<br>1）查看当前Linux系统是否已经安装java<br>输入 rpm -qa | grep java<br>2）卸载两个openJDK<br>输入rpm -e –nodeps 要卸载的软件<br>如果未安装直接跳过前面两个步骤<br>3）上传jdk到linux（我的是Ubuntu Server 16.04.1 LTS 64位注意版本问题）<br>4.解压jdk到/usr/local下 tar –xvf jdk-7u71-linux-i586.tar.gz –C /usr/local<br>5 配置jdk环境变量，打开/etc/profile配置文件，将下面配置拷贝进去，这个一定要用vi打开，gedit可能会不行</p>
<blockquote>
<p>#set java environment<br>    JAVA_HOME=/usr/local/jdk1.7.0_71<br>    CLASSPATH=.:$JAVA_HOME/lib.tools.jar<br>    PATH=$JAVA_HOME/bin:$PATH<br>    export JAVA_HOME CLASSPATH PATH</p>
</blockquote>
<p>6）重新加载/etc/profile配置文件 source /etc/profile</p>
<h4 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h4><p>必选要先安装jdk<br>1）上传Tomcat到linux上<br>2）解压Tomcat到/usr/local下<br>3.cd 到/usr/local下，将apache-tomcat-7.0.57改名成tomcat，为了方便，可自定义名<br>mv apache-tomcat-7.0.57 tomcat<br>4.开放Linux的对外访问的端口8080<br>/sbin/iptables -I INPUT -p tcp –dport 8080 -j ACCEPT<br>/etc/rc.d/init.d/iptables save 关闭防火墙，这里不成功没关系，我的没成功但是可以正常运行<br>5）启动关闭Tomcat<br>进入tomcat的bin下启动：./startup.sh<br>进入tomcat的bin下关闭：./shutdown.sh</p>
<h4 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h4><p>1 sudo apt-get install mysql-server<br>运行完这句命令后，不是root的话会要你输入root密码，密码输入正确后，系统就自动给你下载MySQL了<br>2.授权用户，并允许远程登录<br>mysql -u root -p<br>系统会要你输入密码，密码输入无误后，进入MySQL<br>远程登录mysql的权限<br>登录mysql后输入如下命令：<br>grant all privileges on <em>.</em> to ‘账户名称’ @’%’ identified by ‘密码’;<br>然后更新数据库<br>flush privileges;<br>用管理员权限编辑一下文件<br>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf<br>添加’#’注释掉其中的”bind-address = 127.0.0.1”<br>注释后:wq保存，重启MySQL服务：<br>service mysql restart<br>但是这里仍然不能远程连接，后来找到了解决办法<br>更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”:<br>切换数据库,<br>mysql&gt;use mysql;<br>查看root账号的登录权限,<br>mysql&gt;select host, user from user;<br>修改登录权限<br>mysql&gt;update user set host = ‘%’ where user = ‘root’;<br>刷新,生效,最后一步,至关重要<br>mysql&gt;flush   privileges;</p>
<p>最后解决了</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>有时候别人的步骤不一定适合你，造成很多时候都需要自己去踩坑，去探索。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;我一直坚信没有过程就不会有好的结果。回顾大学期间的学习历程，关于别人访问自己的站点，从刚开始的基于swing的cs系统，到基于socket的
    
    </summary>
    
      <category term="linux" scheme="http://www.myzwl.win/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.myzwl.win/source/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux命令小结</title>
    <link href="http://www.myzwl.win/2017/11/02/linux_1/"/>
    <id>http://www.myzwl.win/2017/11/02/linux_1/</id>
    <published>2017-11-02T06:48:51.000Z</published>
    <updated>2017-11-29T07:43:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p><img src="/images/imgs5/5.jpg" alt="Alt text"></p>
<h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><p>cd 进入某个目录。 如cd use<br>cd ../    切换到上一层目录<br>cd /    切换到系统根目录<br>cd ~    切换到用户主目录<br>cd -    切换到上一个所在目录</p>
<h4 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h4><p>mkdir 创建文件夹<br>rmdir 删除文件夹 文件夹有内容时不可删</p>
<h4 id="查看目录"><a href="#查看目录" class="headerlink" title="查看目录"></a>查看目录</h4><p>ls 看到该目录下的所有的目录和文件<br>ls -a 可以看到该目录下的所有文件和目录，包括隐藏的<br>ls -l或者ll或者ls -alh 可以看到该目录下的所有目录和文件的详细信息<br>ls z* 显示所有文件名以z开头的文件<br>ls z? 显示文件名只有两个字母且第一个字符为z的文件<br>ls &gt;2.txt 重定向 将ls的内容显示在2.txt中<br>ls &gt;&gt;2.txt 将ls的内容追加在2.txt中</p>
<h4 id="寻找目录"><a href="#寻找目录" class="headerlink" title="寻找目录"></a>寻找目录</h4><p>find ./ -name ‘zw*’ 显示当前目录下文件名以zw的开头的文件</p>
<h4 id="修改目录的名称"><a href="#修改目录的名称" class="headerlink" title="修改目录的名称"></a>修改目录的名称</h4><p>mv 目录名称 新目录名称<br>如 mv zwl zwlzwl<br>注意：mv的语法不仅可以对目录进行重命名而且也可以对各种文件，压缩包等进重命名的操作</p>
<h4 id="移动目录的位置—剪切"><a href="#移动目录的位置—剪切" class="headerlink" title="移动目录的位置—剪切"></a>移动目录的位置—剪切</h4><p>mv 目录名称 目录的新位置<br>如 mv 1.txt ../<br>注意：mv语法不仅可以对目录进行剪切操作，对文件和压缩包等都可执行剪切操作</p>
<h4 id="拷贝与删除目录"><a href="#拷贝与删除目录" class="headerlink" title="拷贝与删除目录"></a>拷贝与删除目录</h4><p>cp 复制文件，格式：cp 源文件 目标文件<br>rm 删除文件 （rm 文件夹 -r 递归删除文件夹内所有内容，并删除文件夹）<br>强制删除，使用rm -rf newTest</p>
<h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><p>touch 1.txt 创建1.txt文件<br>cat 1.txt 查看1.txt里的内容<br>more 1.txt 1.txt内容过多时，分页显示<br>less 1.txt，可以使用键盘上的PgUp和PgDn向上    和向下翻页，q结束查看<br>tail -10 1.txt 查看后10行，Ctrl+C结束</p>
<h4 id="解压打包"><a href="#解压打包" class="headerlink" title="解压打包"></a>解压打包</h4><p>Linux中的打包文件一般是以.tar结尾的，压缩的命令一般是以.gz结尾的。<br>而一般情况下打包和压缩是一起进行的，打包并压缩后的文件的后缀名一般.tar.gz。<br>命令：tar -zcvf 打包压缩后的文件名 要打包压缩的文件<br>tar -zcvf xxx.tar.gz aaa.txt bbb.txt ccc.txt<br>或：tar -zcvf xxx.tar.gz /test/*<br>解压压缩包<br>tar -zxvf FileName.tar.gz 压缩到本目录<br>tar -zxvf xxx.tar.gz -C /usr——C代表指定解压的位置</p>
<h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><p>pwd 显示当前所在位置<br>grep 要搜索的字符串 要搜索的文件 –color（搜索命令）<br>ps -ef 查看当前系统中运行的进程<br>kill -9 进程的pid 强制杀死某进程<br>命令：|   将前一个命令的输出作为本次目录的输入<br>如 ps -ef | grep system 查看当前系统中所有的进程中包括system字符串的进程<br>ifconfig  查看当前系统的网卡信息<br>ping 查看与某台机器的连接情况<br>netstat -an 查看当前系统的端口使用</p>
<h4 id="Linux的权限命令"><a href="#Linux的权限命令" class="headerlink" title="Linux的权限命令"></a>Linux的权限命令</h4><p>之前用ll的命令可以查看文件的详细信息<br><img src="/images/imgs5/6.jpg" alt="Alt text"><br>d：代表目录<br>-：代表文件<br>l：代表链接（可以认为是window中的快捷方式）<br>后面的9位分为3组，每3位置一组，分别代表属主的权限，与当前用户同组的    用户的权限，其他用户的权限<br>r：代表权限是可读，r也可以用数字4表示<br>w：代表权限是可写，w也可以用数字2表示<br>x：代表权限是可执行，x也可以用数字1表示<br><img src="/images/imgs5/7.jpg" alt="Alt text"><br>修改文件/目录的权限的命令：chmod<br>chmod u=rwx，g=rw，o=r 1.txt<br>或者 chmod 764 2.txt</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/imgs5/5.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;cd&quot;
    
    </summary>
    
      <category term="linux" scheme="http://www.myzwl.win/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.myzwl.win/source/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>浅谈lucene</title>
    <link href="http://www.myzwl.win/2017/11/01/lucene_1/"/>
    <id>http://www.myzwl.win/2017/11/01/lucene_1/</id>
    <published>2017-11-01T06:48:51.000Z</published>
    <updated>2017-11-27T05:10:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>不知不觉，从九月份后就已经很少写博总结了，有点小颓废了。好吧，回到正题，本着应用为主，了解原理为辅的原则总结。<br>以我的微型论坛中的文章内容检索为例作为应用<a href="http://www.slycmiaoxi.xyz" target="_blank" rel="external">网站链接</a></p>
<h4 id="全文检索定义"><a href="#全文检索定义" class="headerlink" title="全文检索定义"></a>全文检索定义</h4><p>全文检索首先对要搜索的文档进行分词，然后形成索引，通过查询索引来查询文档，比如：字典<br>字典的偏旁部首页，就类似于luence的索引<br>字典的具体内容，就类似于luence的文档内容<br>同时，Lucene是一个工具包，它不能独立运行，不能单独对外提供服务。说白了，就是几个jar包</p>
<h4 id="Lucene实现全文检索的流程"><a href="#Lucene实现全文检索的流程" class="headerlink" title="Lucene实现全文检索的流程"></a>Lucene实现全文检索的流程</h4><p><img src="/images/imgs5/1.jpg" alt="Alt text"><br>其主要分为索引流程和搜索流程<br>索引流程：采集数据—文档处理-存储到索引库中<br>搜索流程：输入查询条件—通过lucene的查询器查询索引—从索引库中取出结果</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><p>需求：对进入论坛的所有文章进行全文检索<br>首先我们利用jdbc采集数据库，为了方便直接利用中文查询器，只贴出核心代码<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">public interface LuceneService &#123;</div><div class="line">	    //初始化采集本地数据</div><div class="line">		public void getIndex() throws Exception;</div><div class="line">		//增加一个term到本地数据</div><div class="line">		public void addIndex(Comment bc)  throws Exception ;</div><div class="line">		//删除一个term</div><div class="line">		public void deleteIndex(String blogId) throws Exception;</div><div class="line">		//更新本地数据</div><div class="line">		public void updateIndex(Blogcomment bc) throws Exception;</div><div class="line">		//根据条件查询数据		</div><div class="line">		public List&lt;Comment&gt; findAllIndex(String q)throws Exception;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 评论实体类</div><div class="line"> * @author zwl</div><div class="line"> *</div><div class="line"> */</div><div class="line">public class Comment &#123;</div><div class="line">	</div><div class="line">    private Date commentDate;</div><div class="line">    </div><div class="line">	private String content;</div><div class="line">	</div><div class="line">	private int id;</div><div class="line">	</div><div class="line">	private String title;</div><div class="line">	</div><div class="line">	private String userIp;</div><div class="line">	</div><div class="line">	private String username;</div><div class="line">	</div><div class="line">	private int hasread;    //访问量</div><div class="line">	</div><div class="line">	private int state;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>下面是其实现类<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div></pre></td><td class="code"><pre><div class="line">@Service("luceneService")</div><div class="line">public class LuceneServiceImpl implements LuceneService &#123;</div><div class="line"></div><div class="line">	@Resource</div><div class="line">	private CommentMapper commentMapper;</div><div class="line">	</div><div class="line">	private Directory dir;</div><div class="line">	</div><div class="line">	//得到索引维护核心对象</div><div class="line">	private IndexWriter getWriter() throws Exception &#123;</div><div class="line">		File indexFile = new File("C:\\lucene\\");</div><div class="line">		Directory d=FSDirectory.open(indexFile);</div><div class="line">		 Analyzer analyzer =new IKAnalyzer();</div><div class="line">		 IndexWriterConfig conf=new IndexWriterConfig(Version.LUCENE_4_9_1, analyzer);</div><div class="line">			IndexWriter write=new IndexWriter(d, conf);</div><div class="line">			return write;</div><div class="line">&#125;</div><div class="line">	</div><div class="line">	public void addIndex(Comment bc)  throws Exception &#123;</div><div class="line">		IndexWriter write=getWriter();</div><div class="line">		Document document=new Document();</div><div class="line">		</div><div class="line">		// store:如果是yes，则说明存储到文档域中</div><div class="line">		Field id=new TextField("id",String.valueOf(bc.getId()), Store.YES);</div><div class="line">		Field username=new TextField("username",bc.getUsername(),Store.YES);</div><div class="line">		Field blogCommentDate=new TextField("commentDate",bc.getCommentDate().toLocaleString(),Store.YES);</div><div class="line">		Field content=new TextField("content",bc.getContent(),Store.YES);</div><div class="line">		Field title=new TextField("title",bc.getTitle(),Store.YES);</div><div class="line">		Field hasread=new TextField("hasread",bc.getHasread()+"",Store.YES);</div><div class="line">		Field state=new TextField("state",bc.getState()+"",Store.YES);	</div><div class="line">	             </div><div class="line">     // 将field域设置到Document对象中</div><div class="line">		document.add(id);</div><div class="line">		document.add(username);</div><div class="line">		document.add(blogCommentDate);</div><div class="line">		document.add(content);</div><div class="line">		document.add(title);</div><div class="line">		document.add(hasread);</div><div class="line">		document.add(state);</div><div class="line">					</div><div class="line">					write.addDocument(document);</div><div class="line">	             write.close();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public List&lt;Comment&gt; findAllIndex(String q)throws Exception&#123;</div><div class="line">		File indexFile = new File("C:\\lucene\\");</div><div class="line">		dir=FSDirectory.open(indexFile);</div><div class="line">		IndexReader reader = DirectoryReader.open(dir);</div><div class="line">		IndexSearcher searcher = new IndexSearcher(reader);</div><div class="line">		QueryParser parser = new QueryParser("content",</div><div class="line">				 new IKAnalyzer());</div><div class="line">		Query query = parser.parse(q);</div><div class="line">		TopDocs topDocs = searcher.search(query, 5);</div><div class="line">		List&lt;Comment&gt; list=new ArrayList&lt;Comment&gt;();</div><div class="line">		Comment cc=null;</div><div class="line">		// 根据查询条件匹配出的记录总数</div><div class="line">		int count = topDocs.totalHits;</div><div class="line">		System.out.println("匹配出的记录总数:" + count);</div><div class="line">		// 根据查询条件匹配出的记录</div><div class="line">		ScoreDoc[] scoreDocs = topDocs.scoreDocs;</div><div class="line">		for (ScoreDoc scoreDoc : scoreDocs) &#123;</div><div class="line">			// 获取文档的ID</div><div class="line">			int docId = scoreDoc.doc;</div><div class="line">			// 通过ID获取文档</div><div class="line">			Document doc = searcher.doc(docId);</div><div class="line">			cc=new Comment();</div><div class="line">			cc.setId(Integer.parseInt(doc.get("id")));</div><div class="line">			cc.setUsername( doc.get("username"));</div><div class="line">			cc.setTitle(doc.get("title"));</div><div class="line">			cc.setCommentDate(DateUtil.formatString(doc.get("commentDate"),"yyyy-MM-dd HH:mm"));</div><div class="line">			cc.setHasread(Integer.parseInt(doc.get("hasread")));	 </div><div class="line">		    cc.setContent(doc.get("content"));</div><div class="line">		    list.add(cc);</div><div class="line">		&#125;</div><div class="line">		// 关闭资源</div><div class="line">		reader.close();</div><div class="line">	return list;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	//删除指定博客的索引</div><div class="line">			public void deleteIndex(String blogId) throws Exception &#123;</div><div class="line">				IndexWriter write=getWriter();</div><div class="line">				write.deleteDocuments(new Term("id",blogId));</div><div class="line">				write.commit();</div><div class="line">				write.close();</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			//更新博客索引</div><div class="line">			public void updateIndex(Blogcomment bc) throws Exception &#123;</div><div class="line">				IndexWriter write=getWriter();</div><div class="line">				Document document=new Document();</div><div class="line">				</div><div class="line">				// store:如果是yes，则说明存储到文档域中</div><div class="line">							Field id=new TextField("id",String.valueOf(bc.getId()), Store.YES);</div><div class="line">							Field username=new TextField("username",bc.getUsername(),Store.YES);</div><div class="line">							Field blogCommentDate=new TextField("blogCommentDate",bc.getBlogCommentDate().toLocaleString(),Store.YES);</div><div class="line">							Field comments=new TextField("comments",bc.getComments(),Store.YES);</div><div class="line">							Field title=new TextField("title",bc.getComment().getTitle(),Store.YES);</div><div class="line">							Field hasread=new TextField("hasread",bc.getComment().getHasread()+"",Store.YES);</div><div class="line">							Field cid=new TextField("cid",bc.getComment().getId()+"",Store.YES);	</div><div class="line">			             </div><div class="line">							// 将field域设置到Document对象中</div><div class="line">							document.add(id);</div><div class="line">							document.add(username);</div><div class="line">							document.add(blogCommentDate);</div><div class="line">							document.add(comments);</div><div class="line">							document.add(title);</div><div class="line">							document.add(hasread);</div><div class="line">							document.add(cid);</div><div class="line">							</div><div class="line">							write.updateDocument(new Term("id",bc.getId()+""), document);</div><div class="line">			               write.close();</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">	//初始化采集本地数据</div><div class="line">	public void getIndex() throws Exception&#123;</div><div class="line">	</div><div class="line">		// 采集数据</div><div class="line">				List&lt;Comment&gt; list=commentMapper.readAll();</div><div class="line">				</div><div class="line">				// 将采集到的数据封装到Document对象中</div><div class="line">				List&lt;Document&gt; docList=new ArrayList&lt;Document&gt;();</div><div class="line">				Document document=null;</div><div class="line">				for(Comment bc:list)&#123;</div><div class="line">					document=new Document();</div><div class="line">					// store:如果是yes，则说明存储到文档域中</div><div class="line">					Field id=new TextField("id",String.valueOf(bc.getId()), Store.YES);</div><div class="line">					Field username=new TextField("username",bc.getUsername(),Store.YES);</div><div class="line">					Field blogCommentDate=new TextField("commentDate",bc.getCommentDate().toLocaleString(),Store.YES);</div><div class="line">					Field content=new TextField("content",bc.getContent(),Store.YES);</div><div class="line">					Field title=new TextField("title",bc.getTitle(),Store.YES);</div><div class="line">					Field hasread=new TextField("hasread",bc.getHasread()+"",Store.YES);</div><div class="line">					Field state=new TextField("state",bc.getState()+"",Store.YES);</div><div class="line">					</div><div class="line">					</div><div class="line">					// 将field域设置到Document对象中</div><div class="line">					document.add(id);</div><div class="line">					document.add(username);</div><div class="line">					document.add(blogCommentDate);</div><div class="line">					document.add(content);</div><div class="line">					document.add(title);</div><div class="line">					document.add(hasread);</div><div class="line">					document.add(state);</div><div class="line">					</div><div class="line">					docList.add(document);			</div><div class="line">				&#125;</div><div class="line">				</div><div class="line">				IndexWriter write=this.getWriter();</div><div class="line">				// 通过IndexWriter对象将Document写入到索引库中</div><div class="line">				for(Document doc:docList)&#123;</div><div class="line">					write.addDocument(doc);</div><div class="line">				&#125;</div><div class="line">				// 关闭writer</div><div class="line">				write.close();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="索引文件的逻辑结构"><a href="#索引文件的逻辑结构" class="headerlink" title="索引文件的逻辑结构"></a>索引文件的逻辑结构</h4><p><img src="/images/imgs5/2.jpg" alt="Alt text"><br>通过图示，可以发现最重要的就是文档域和索引域<br>文档域存储的信息就是采集到的信息，通过Document对象来存储，具体说是通过Document对象中field域来存储数据。<br>比如：数据库中一条记录会存储一个一个Document对象，数据库中一列会存储成Document中一个field域。<br>索引域主要是为了搜索使用的。索引域内容是经过lucene分词之后存储的（这里的分词根据所引入的分词器不同，分词效果不一样）<br>传统方法是先找到文件，如何在文件中找内容，在文件内容中匹配搜索关键字，这种方法是顺序扫描方法，数据量大就搜索慢<br>但是lucene采用倒排索引结构，它是在索引中匹配搜索关键字，由于索引内容量有限并且采用固定优化算法搜索速度很快，找到了索引中的词汇，词汇与文档关联，从而最终找到了文档。</p>
<h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><p><img src="/images/imgs5/3.jpg" alt="Alt text"><br>其中，IndexWriter是索引过程的核心组件，通过IndexWriter可以创建新索引、更新索引、删除索引操作。IndexWriter需要通过Directory对索引进行存储操作。<br>Directory描述了索引的存储位置，底层封装了I/O操作，负责对索引进行存储。它是一个抽象类，它的子类常用的包括FSDirectory（在文件系统存储索引）、RAMDirectory（在内存存储索引）。</p>
<h4 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h4><p>Lucene中分词主要分为两个步骤：分词、过滤<br>分词：将field域中的内容一个个的分词。<br>过滤：将分好的词进行过滤，比如去掉标点符号、大写转小写、词的型还原（复数转单数、过去式转成现在式）、停用词过滤<br>停用词：单独应用没有特殊意义的词。比如的、啊、等，英文中的this is a the等等。</p>
<h4 id="搜索流程"><a href="#搜索流程" class="headerlink" title="搜索流程"></a>搜索流程</h4><p><img src="/images/imgs5/4.jpg" alt="Alt text"><br>Field的属性，主要有三个<br>是否分词（Tokenized）<br>是：对该field存储的内容进行分词，分词的目的，就是为了索引。<br>是否索引（Indexed）<br>是：将分好的词进行索引，索引的目的，就是为了搜索<br>是否存储（Stored）<br>是：将field域中的内容存储到文档域中。存储的目的，就是为了搜索页面显示取值用的。</p>
<h4 id="创建查询对象的方式"><a href="#创建查询对象的方式" class="headerlink" title="创建查询对象的方式"></a>创建查询对象的方式</h4><p>通过QueryParser来创建查询对象（其他方式就不介绍了）<br>通过QueryParser来创建query对象，可以指定分词器，搜索时的分词器和创建该索引的分词器一定要一致。还可以输入查询语句。<br>查询语法<br>1、基础的查询语法，关键词查询：<br>域名+“：”+搜索的关键字<br>例如：content:java<br>2、范围查询<br>域名+“:”+[最小值 TO 最大值]<br>例如：size:[1 TO 1000]<br>3、组合条件查询<br>条件1 AND 条件2<br>条件1 OR 条件2<br>条件1 NOT 条件2</p>
<h4 id="TopDocs"><a href="#TopDocs" class="headerlink" title="TopDocs"></a>TopDocs</h4><p>Lucene搜索结果可通过TopDocs遍历<br>earch方法需要指定匹配记录数量n：indexSearcher.search(query, n)<br>TopDocs.totalHits：是匹配索引库中所有记录的数量<br>TopDocs.scoreDocs：匹配相关度高的前边记录数组，scoreDocs的长度小于等于search方法指定的参数n</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>当然lucene的知识体系远不止这些，这里只是通过应用主导学习来浅尝全文检索。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;不知不觉，从九月份后就已经很少写博总结了，有点小颓废了。好吧，回到正题，本着应用为主，了解原理为辅的原则总结。&lt;br&gt;以我的微型论坛中的文章
    
    </summary>
    
      <category term="全文检索" scheme="http://www.myzwl.win/categories/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/"/>
    
    
      <category term="全文检索" scheme="http://www.myzwl.win/source/tags/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>丑数</title>
    <link href="http://www.myzwl.win/2017/10/22/offer_44/"/>
    <id>http://www.myzwl.win/2017/10/22/offer_44/</id>
    <published>2017-10-22T06:48:51.000Z</published>
    <updated>2017-11-07T10:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>把只包含因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>由丑数的定义知道丑数只有以上三个因子，所以在排序的丑数列表中，后面的某个丑数一定是前面某个丑数乘以2或3或5的结果，所以我们以这三个因子的到的丑数进行排序，把最小的丑数更新到丑数列表中，如果刚好是丑数中的最小值，则把该数对应的下标加1，然后继续寻找下一个丑数</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">public int GetUglyNumber_Solution(int index) &#123;</div><div class="line">       if(index&lt;=0)return 0;</div><div class="line">       int[] ugly=new int[index];</div><div class="line">       ugly[0]=1;</div><div class="line">       int count=1;</div><div class="line">       int num2=0;</div><div class="line">       int num3=0;</div><div class="line">       int num5=0;</div><div class="line">       while(count&lt;index)&#123;</div><div class="line">           int min=IsUglyNumber(ugly[num2]*2,ugly[num3]*3,ugly[num5]*5);</div><div class="line">           ugly[count]=min;</div><div class="line">           count++;</div><div class="line">           if(min==ugly[num2]*2)</div><div class="line">               num2++;</div><div class="line">           if(min==ugly[num3]*3)</div><div class="line">               num3++;</div><div class="line">           if(min==ugly[num5]*5)</div><div class="line">               num5++;</div><div class="line">       &#125;    </div><div class="line">       return ugly[index-1];</div><div class="line">   &#125;</div><div class="line">   </div><div class="line">   private int IsUglyNumber(int num2,int num3,int num5)&#123;</div><div class="line">       int min=num2&lt;num3?num2:num3;</div><div class="line">       return min&lt;num5?min:num5;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;把只包含因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含因子7。 习惯上我们
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>左旋转字符串</title>
    <link href="http://www.myzwl.win/2017/10/21/offer_43/"/>
    <id>http://www.myzwl.win/2017/10/21/offer_43/</id>
    <published>2017-10-21T06:48:51.000Z</published>
    <updated>2017-11-07T10:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，请你把其循环左移K位后的序列输出。例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？OK，搞定它！</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>我的想法是构造两个字符数组，一个用来保存要移位的字符集，另一个是不移位的字符，最后将其按照顺序保存在一个新的字符数组中即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">public String LeftRotateString(String str,int n) &#123;</div><div class="line">      if(str==null||str.equals("")||n&gt;str.length())</div><div class="line">          return "";</div><div class="line">      if(n==0)</div><div class="line">          return str;</div><div class="line">          char[] s1=new char[n];</div><div class="line">      char[] s2=new char[str.length()-n];</div><div class="line">      char[] s3=str.toCharArray();</div><div class="line">      for(int i=0;i&lt;str.length();i++)&#123;</div><div class="line">          if(i&gt;=0&amp;&amp;i&lt;n)</div><div class="line">              s1[i]=s3[i];</div><div class="line">          else</div><div class="line">              s2[i-n]=s3[i];</div><div class="line">      &#125;</div><div class="line">      StringBuffer sb=new StringBuffer(str.length());</div><div class="line">      for(int i=0;i&lt;s2.length;i++)</div><div class="line">          sb.append(s2[i]);</div><div class="line">      for(int i=0;i&lt;s1.length;i++)</div><div class="line">          sb.append(s1[i]);</div><div class="line">      return sb.toString();</div><div class="line">  &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>翻转单词顺序列</title>
    <link href="http://www.myzwl.win/2017/10/20/offer_42/"/>
    <id>http://www.myzwl.win/2017/10/20/offer_42/</id>
    <published>2017-10-20T06:48:51.000Z</published>
    <updated>2017-11-07T09:19:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一天他向Fish借来翻看，但却读不懂它的意思。例如，“student. a am I”。后来才意识到，这家伙原来把句子单词的顺序翻转了，正确的句子应该是“I am a student.”。Cat对一一的翻转这些单词顺序可不在行，你能帮助他么？</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>关于这个题目，有很多种解法，其中一个解法是利用倒序，即从数组的最后一个数开始依次加入到stringBuffer中即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public String ReverseSentence(String str) &#123;</div><div class="line">       if(str == null)&#123; return null;&#125;</div><div class="line">        if(str.trim().equals(""))&#123;</div><div class="line">           return str;</div><div class="line">       &#125;</div><div class="line">           String[] s=str.split(" ");</div><div class="line">       StringBuffer sb=new StringBuffer(s.length);</div><div class="line">       for(int i=s.length-1;i&gt;=0;i--)&#123;</div><div class="line">           if(i!=0)</div><div class="line">           sb.append(s[i]+" ");</div><div class="line">           else</div><div class="line">               sb.append(s[i]);</div><div class="line">       &#125;</div><div class="line">       return sb.toString();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>扑克牌顺子</title>
    <link href="http://www.myzwl.win/2017/10/19/offer_41/"/>
    <id>http://www.myzwl.win/2017/10/19/offer_41/</id>
    <published>2017-10-19T06:48:51.000Z</published>
    <updated>2017-11-07T09:15:44.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子…..LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何。为了方便起见,你可以认为大小王是0。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>先将大小王约定为0，可以补充任何相差的数字，然后进行排序并且统计出其中0的个数，然后对后面的数进行判断，如果相邻数字小于0的个数，是可以填补的，然后在减少0的个数，依次比较，直到最后连续</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">public boolean isContinuous(int [] numbers) &#123;</div><div class="line">         if(numbers==null)</div><div class="line">             return false;</div><div class="line">       Arrays.sort(numbers);</div><div class="line">       int i=0,zero=0;</div><div class="line">       for(;i&lt;numbers.length&amp;&amp;numbers[i]==0;i++)</div><div class="line">           zero++;</div><div class="line">       for(;i&lt;numbers.length-1&amp;&amp;zero&gt;=0;i++)&#123;</div><div class="line">           if(numbers[i]==numbers[i+1])</div><div class="line">               return false;</div><div class="line">           if(numbers[i]+1+zero&gt;=numbers[i+1])&#123;</div><div class="line">               zero-=numbers[i+1]-numbers[i]-1;</div><div class="line">           &#125;</div><div class="line">           else</div><div class="line">               return false;</div><div class="line">       &#125;</div><div class="line">       if(i==numbers.length -1)</div><div class="line">           return true;</div><div class="line">       else</div><div class="line">           return false;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>求1+2+3+...+n</title>
    <link href="http://www.myzwl.win/2017/10/18/offer_40/"/>
    <id>http://www.myzwl.win/2017/10/18/offer_40/</id>
    <published>2017-10-18T06:48:51.000Z</published>
    <updated>2017-11-07T09:00:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>根据题目的约束，只能使用递归操作了。当n递归到最小值1时结束，并且每次递归调用一次，值就减少1，直至n为1为止</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">private int result=0;</div><div class="line">    public int Sum_Solution(int n) &#123;</div><div class="line">        cale(n);</div><div class="line">        return result;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    private boolean cale(int n)&#123;</div><div class="line">        result+=n;</div><div class="line">        return n!=0&amp;&amp;cale(n-1);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>不用加减乘除做加法</title>
    <link href="http://www.myzwl.win/2017/10/17/offer_39/"/>
    <id>http://www.myzwl.win/2017/10/17/offer_39/</id>
    <published>2017-10-17T06:48:51.000Z</published>
    <updated>2017-11-07T08:56:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想是采用位运算，主要分为三步，比如5（101）+17（10001），第一步各位相加但不进位，得10100，第二部记下进位，的10，最后一步把前两部相加，得22（10110），根据异或和与逻辑与的运算规则，很容易知道第一步符合异或规则，第二部先与在左移一位进位即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public int Add(int num1,int num2) &#123;</div><div class="line">       int sum,carry;</div><div class="line">       do&#123;</div><div class="line">           sum=num1^num2;</div><div class="line">           carry=(num1&amp;num2)&lt;&lt;1;</div><div class="line">           num1=sum;</div><div class="line">           num2=carry;</div><div class="line">       &#125;while(num2!=0);</div><div class="line">       return num1;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。&lt;/p&gt;
&lt;h4 id=&quot;思路分析&quot;&gt;&lt;a h
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数组中重复的数字</title>
    <link href="http://www.myzwl.win/2017/10/16/offer_38/"/>
    <id>http://www.myzwl.win/2017/10/16/offer_38/</id>
    <published>2017-10-16T06:48:51.000Z</published>
    <updated>2017-11-07T08:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想可以相对整个数组进行排序，这样如果相邻元素一样说明是重复的，只要遍历整个数组，找到第一个相同的就找到了第一个重复的数字</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">public boolean duplicate(int numbers[],int length,int [] duplication) &#123;</div><div class="line">        if(length==0||numbers==null)</div><div class="line">        &#123;</div><div class="line">            duplication[0]=-1;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">           Arrays.sort(numbers);</div><div class="line">           for(int i=0;i&lt;numbers.length-1;i++)&#123;</div><div class="line">               if(numbers[i]==numbers[i+1])</div><div class="line">               &#123;</div><div class="line">                   duplication[0]=numbers[i];</div><div class="line">                   return true;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式匹配</title>
    <link href="http://www.myzwl.win/2017/10/15/offer_37/"/>
    <id>http://www.myzwl.win/2017/10/15/offer_37/</id>
    <published>2017-10-15T06:48:51.000Z</published>
    <updated>2017-11-07T04:21:44.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>请实现一个函数用来匹配包括’.’和’<em>‘的正则表达式。模式中的字符’.’表示任意一个字符，而’</em>‘表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串”aaa”与模式”a.a”和”ab<em>ac</em>a”匹配，但是与”aa.a”和”ab*a”均不匹配</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>先考虑模式串中有’<em>‘的情况，因为</em>可以匹配0个或多个，所以如果模式串的下一个字符是<em>的时候就有三种情况<br>1.匹配0个主串的字符，比如主串是abc，模式串是b</em>，那么下一步匹配的策略是主串保持不变，模式串跳到下两个字符重新比较，<br>2.匹配1个字符，比如主串是abc，模式串是a<em>，下一步比较策略是主串跳到下一个字符，模式串移动两个字符<br>3.匹配多个字符，比如主串aac，模式串是a</em>cb，因为只匹配aa两个字符，下一步策略是主串移动一个字符，模式串移动两个字符，如果当前字符与主串字符不能匹配，则主串不变，模式串移动两个位置<br>如果当前字符是’.’，直接按逐个字符进行比较</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public boolean match(char[] str,char[] pattern)&#123;</div><div class="line">    if(str==null||pattern==null)</div><div class="line">      return false;</div><div class="line">    return matchRegCore(str,0,str.length,pattern,0,pattern.length);</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  private boolean matchRegCore(char[] str,int i,int length1,char[] pattern,int j,int length2)&#123;</div><div class="line">    if(i==length1&amp;&amp;j==length2)&#123;</div><div class="line">      if(j==length2||pattern[j]=='*')</div><div class="line">        return true;</div><div class="line">      else</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">    if(i!=length1&amp;&amp;j==length2)</div><div class="line">      return false;</div><div class="line">    if(j+1&lt;length2&amp;&amp;pattern[j+1]=='*')&#123;</div><div class="line">      if(i&lt;length1&amp;&amp;(pattern[j]==str[i]||pattern[j]=='.'))&#123;</div><div class="line">        return matchRegCore(str,i+1,length1,pattern,j,length2)||</div><div class="line">            matchRegCore(str,i+1,length1,pattern,j+2,length2)||</div><div class="line">            matchRegCore(str,i,length1,pattern,j+2,length2);</div><div class="line">      &#125;else&#123;</div><div class="line">        return matchRegCore(str,i,length1,pattern,j+2,length2);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    if(i&lt;length1&amp;&amp;(str[i]==pattern[j]||pattern[j]=='.'))&#123;</div><div class="line">      return matchRegCore(str,i+1,length1,pattern,j+1,length2);</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;请实现一个函数用来匹配包括’.’和’&lt;em&gt;‘的正则表达式。模式中的字符’.’表示任意一个字符，而’&lt;/em&gt;‘表示它前面的
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>表示数值的字符串</title>
    <link href="http://www.myzwl.win/2017/10/14/offer_36/"/>
    <id>http://www.myzwl.win/2017/10/14/offer_36/</id>
    <published>2017-10-14T06:48:51.000Z</published>
    <updated>2017-11-07T04:07:46.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串”+100”,”5e2”,”-123”,”3.1416”和”-1E-16”都表示数值。 但是”12e”,”1a3.14”,”1.2.3”,”+-5”和”12e+4.3”都不是。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思路就是分情况讨论，主要分为三类：整数、浮点数和科学计数法。<br>对于整数的判断，就是字符串中没有出现非0到9的字符即可，否则返回错误<br>对于浮点数，只要考虑整数后面出现一个小数点，而后面的判断与整数相同，<br>对于科学计数法，就是e和E后其后面的字符串与整数一样，同时如果后面没有数字是不被允许的</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public boolean isNumeric(char[] str) &#123;</div><div class="line">        if(str==null||str.length==0)return false;</div><div class="line">        int index=0;</div><div class="line">        int length=str.length;</div><div class="line">        while(index&lt;length&amp;&amp;str[index]==' ')index++;</div><div class="line">        if(index&gt;=length)return false;</div><div class="line">        while(str[length-1]==' ')length--;</div><div class="line">        if(str[index]=='+'||str[index]=='-')index++;</div><div class="line">        if(index&gt;=length)return false;</div><div class="line">        </div><div class="line">        while(index&lt;length&amp;&amp;str[index]&gt;='0'&amp;&amp;str[index]&lt;='9')index++;</div><div class="line">        if(index==length) return true;</div><div class="line">        int index2=index;</div><div class="line">        </div><div class="line">        if(str[index]=='.')&#123;</div><div class="line">          index++;</div><div class="line">          if(index==length)return true;</div><div class="line">          index2=index;</div><div class="line">          while(index&lt;length&amp;&amp;str[index]&gt;='0'&amp;&amp;str[index]&lt;='9')index++;</div><div class="line">          if(index==index2) return false;</div><div class="line">          if(index==length) return true;</div><div class="line">        &#125;</div><div class="line">       </div><div class="line">        if(str[index]=='e'||str[index]=='E')&#123;</div><div class="line">          index++;</div><div class="line">          if(index==length)return false;</div><div class="line">          if(str[index]=='+'||str[index]=='-')index++;</div><div class="line">          index2=index;</div><div class="line">          while(index&lt;length&amp;&amp;str[index]&gt;='0'&amp;&amp;str[index]&lt;='9')index++;</div><div class="line">          if(index==index2) return false;</div><div class="line">          if(index==length) return true;</div><div class="line">        &#125;</div><div class="line">          return false;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串”+100”,”5e2”,”-123”,”3.141
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>字符流中第一个不重复的字符</title>
    <link href="http://www.myzwl.win/2017/10/13/offer_35/"/>
    <id>http://www.myzwl.win/2017/10/13/offer_35/</id>
    <published>2017-10-13T06:48:51.000Z</published>
    <updated>2017-11-07T03:57:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符”go”时，第一个只出现一次的字符是”g”。当从该字符流中读出前六个字符“google”时，第一个只出现一次的字符是”l”。<br>如果当前字符流没有存在出现一次的字符，返回#字符。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是创建一个map用来记录每个字符出现的次数，而list则记录只出现一次的字符集合，遍历字符，如果map中不存在说明是第一次，则把字符作为key加入，然后在放到list中，如果map中包含了该键，一方面记录该字符次数，另一方面看list中是否包含该元素，在删除，最后list中只保留出现一次的字符</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.HashMap;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Map;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">private Map&lt;Character, Integer&gt; map=new HashMap&lt;Character, Integer&gt;();</div><div class="line">  private List&lt;Character&gt; list=new ArrayList&lt;Character&gt;();</div><div class="line">  </div><div class="line">  //Insert one char from stringstream</div><div class="line">  public void Insert(char ch)</div><div class="line">  &#123;</div><div class="line">      if(!map.containsKey(ch))&#123;</div><div class="line">          map.put(ch, 1);</div><div class="line">          list.add(ch);</div><div class="line">      &#125;else&#123;</div><div class="line">          map.put(ch, map.get(ch)+1);</div><div class="line">          if(list.contains(ch))</div><div class="line">              list.remove(Character.valueOf(ch));</div><div class="line">      &#125;</div><div class="line">      </div><div class="line">  &#125;</div><div class="line">//return the first appearence once char in current stringstream</div><div class="line">  public char FirstAppearingOnce()</div><div class="line">  &#123;</div><div class="line">  if(list.isEmpty())return '#';</div><div class="line">  return list.get(0);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符”go”时，第一个只出现一次的字符是
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数组中只出现一次的数字</title>
    <link href="http://www.myzwl.win/2017/10/12/offer_34/"/>
    <id>http://www.myzwl.win/2017/10/12/offer_34/</id>
    <published>2017-10-12T06:48:51.000Z</published>
    <updated>2017-11-07T03:45:50.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是如果数组中元素是第一次出现，则加入集合中，继续往后遍历，如果包含该元素，则删除那个元素，最后通过筛选只剩下出现一次的元素了</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//num1,num2分别为长度为1的数组。传出参数</div><div class="line">//将num1[0],num2[0]设置为返回结果</div><div class="line">import java.util.List;</div><div class="line">import java.util.ArrayList;</div><div class="line">public class Solution &#123;</div><div class="line">   public void FindNumsAppearOnce(int [] array,int num1[] , int num2[]) &#123;</div><div class="line">          ArrayList&lt;Integer&gt; list=new ArrayList&lt;Integer&gt;();</div><div class="line">        for(int i=0;i&lt;array.length;i++)&#123;</div><div class="line">            if(list.contains(array[i]))&#123;</div><div class="line">                list.remove((Integer)array[i]);</div><div class="line">            &#125;else&#123;</div><div class="line">                list.add(array[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        num1[0]=list.get(0);</div><div class="line">        num2[0]=list.get(1);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。&lt;/p&gt;
&lt;h4 id=&quot;思路分
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>和为S的两个数字</title>
    <link href="http://www.myzwl.win/2017/10/11/offer_33/"/>
    <id>http://www.myzwl.win/2017/10/11/offer_33/</id>
    <published>2017-10-11T06:48:51.000Z</published>
    <updated>2017-11-05T04:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>输入一个递增排序的数组和一个数字S，在数组中查找两个数，是的他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是设置两个变量，起始变量start和指向尾的变量end，刚开始先比较和cur=start+end与s的和，如果比s大说明最后的end数较大，end应前移，直至小于等于，反之则是start较小，start应后移。直至最后等于为止，此时因为end处于最大的情况，所以start处于最小，也是所要找的两个数。但是如果不存在，则返回空</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public ArrayList&lt;Integer&gt; FindNumbersWithSum(int [] array,int sum) &#123;</div><div class="line">        ArrayList&lt;Integer&gt; list=new ArrayList&lt;Integer&gt;();</div><div class="line">         ArrayList&lt;Integer&gt; lists=new ArrayList&lt;Integer&gt;();</div><div class="line">        if(array==null||sum&lt;=0) return list;</div><div class="line">        int start=0;</div><div class="line">        int end=array.length-1;</div><div class="line">        int curSum=array[start]+array[end];</div><div class="line">        while(start&lt;end)&#123;</div><div class="line">            if(curSum==sum)&#123;</div><div class="line">                    list.add(array[start]);</div><div class="line">                    list.add(array[end]);</div><div class="line">                &#125;</div><div class="line">            while(curSum&gt;sum)&#123;</div><div class="line">                end--;</div><div class="line">                 curSum=array[start]+array[end];</div><div class="line">                if(curSum==sum)&#123;</div><div class="line">                    list.add(array[start]);</div><div class="line">                    list.add(array[end]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            start++;  </div><div class="line">            curSum=array[start]+array[end];</div><div class="line">        &#125;</div><div class="line">        if(list.size()==0)return list;</div><div class="line">        lists.add(list.get(0));</div><div class="line">        lists.add(list.get(1));</div><div class="line">        return lists;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;输入一个递增排序的数组和一个数字S，在数组中查找两个数，是的他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>和为S的连续正数序列</title>
    <link href="http://www.myzwl.win/2017/10/10/offer_32/"/>
    <id>http://www.myzwl.win/2017/10/10/offer_32/</id>
    <published>2017-10-10T06:48:51.000Z</published>
    <updated>2017-11-05T02:51:56.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是通过两个变量small（最小值）和big（最大值）来控制，比如s为12，起始samll为1，big为2，和为3小于12，说明big需要后移一位，此时为{1,2,3}为6，小于12，big在增大直至{1,2,3,4,5}为15大于12，说明最小值应该后移，所以为{2,3,4,5}，继续后移{3,4,5}满足，找到了，思路大致就是这样，但是small移动时不能超过（sum+1）/2，也就是平均值，因为超过平均值后面肯定会大于s了</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public ArrayList&lt;ArrayList&lt;Integer&gt; &gt; FindContinuousSequence(int sum) &#123;</div><div class="line">      ArrayList&lt;ArrayList&lt;Integer&gt;&gt; sqList=new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</div><div class="line">       if(sum&lt;3)return sqList;</div><div class="line">       int small=1;</div><div class="line">       int big=2;</div><div class="line">       int curSum=small+big;</div><div class="line">       int middle=(1+sum)/2;</div><div class="line">       while(small&lt;middle)&#123;</div><div class="line">           ArrayList&lt;Integer&gt; sq=new ArrayList&lt;Integer&gt;();</div><div class="line">          if(curSum==sum)&#123;</div><div class="line">               for(int i=small;i&lt;=big;i++)</div><div class="line">                   sq.add(i);</div><div class="line">           &#125;</div><div class="line">           while(curSum&gt;sum&amp;&amp;small&lt;middle)&#123;</div><div class="line">               curSum-=small;</div><div class="line">               small++;</div><div class="line">               if(curSum==sum)&#123;</div><div class="line">               for(int i=small;i&lt;=big;i++)</div><div class="line">                   sq.add(i);</div><div class="line">           &#125;</div><div class="line">           &#125;</div><div class="line"></div><div class="line">       if(sq.size()&gt;0)sqList.add(sq);</div><div class="line">       big++;</div><div class="line">       curSum+=big;</div><div class="line">       &#125;</div><div class="line">       return sqList;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数字在排序数组中出现的次数</title>
    <link href="http://www.myzwl.win/2017/10/09/offer_31/"/>
    <id>http://www.myzwl.win/2017/10/09/offer_31/</id>
    <published>2017-10-09T06:48:51.000Z</published>
    <updated>2017-11-04T11:54:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>统计一个数字在排序数组中出现的次数。</p>
<h4 id="思路分析-解法一"><a href="#思路分析-解法一" class="headerlink" title="思路分析(解法一)"></a>思路分析(解法一)</h4><p>最直观的想法就是通过顺序查找，即依次比较数组与给定元素大小，然后设置一个计数变量，又由于数组是排序的，所以直接当比较的数大于给定数时，结束</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public int GetNumberOfK(int [] array , int k) &#123;</div><div class="line">         if(array==null)return 0;</div><div class="line">         int count=0;</div><div class="line">         for(int i=0;i&lt;array.length;i++)&#123;</div><div class="line">           if(array[i]==k)&#123;</div><div class="line">             count++;</div><div class="line">           &#125;</div><div class="line">           if(array[i]&gt;k)</div><div class="line">             return count;</div><div class="line">         &#125;</div><div class="line">         return count;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="思路分析-解法二"><a href="#思路分析-解法二" class="headerlink" title="思路分析(解法二)"></a>思路分析(解法二)</h4><p>由于是已排序的，所以查找最好的就是通过二分查找，即先找出第一次出现和最后一次出现该数即可，但是由于当我们找到该数时，比如第一次找到该数时，先比较在他前面是否有重复该数，如果是，这说明据需向前面比较，知道找到第一次出现该数，同理，最后一次出现该数也是比较后面是否有该数重复</p>
<h4 id="码上有戏-1"><a href="#码上有戏-1" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">public int GetNumberOfK(int [] array , int k) &#123;</div><div class="line">    int length = array.length;</div><div class="line">         if(length == 0)&#123;</div><div class="line">             return 0;</div><div class="line">         &#125;</div><div class="line">         int firstK = getFirstK(array, k, 0, length-1);</div><div class="line">         int lastK = getLastK(array, k, 0, length-1);</div><div class="line">         if(firstK != -1 &amp;&amp; lastK != -1)&#123;</div><div class="line">              return lastK - firstK + 1;</div><div class="line">         &#125;</div><div class="line">         return 0;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> private int getFirstK(int array[],int k,int start,int end)&#123;</div><div class="line">   if(start&gt;end)return -1;</div><div class="line">    int mid=(start+end)&gt;&gt;1;</div><div class="line">   if(array[mid]&gt;k)return getFirstK(array,k,start,mid-1);</div><div class="line">   else if(array[mid]&lt;k) return getFirstK(array,k,mid+1,end);</div><div class="line">       else if(mid-1 &gt;=0 &amp;&amp; array[mid-1] == k)&#123;</div><div class="line">           return getFirstK(array, k, start, mid-1);</div><div class="line">       &#125;</div><div class="line">   else return mid;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> private int getLastK(int array[],int k,int start,int end)&#123;</div><div class="line">       int length = array.length;</div><div class="line">   int mid=(start+end)&gt;&gt;1;</div><div class="line">   while(start&lt;=end)&#123;</div><div class="line">     if(array[mid]&lt;k)</div><div class="line">       start=mid+1;</div><div class="line">     else if(array[mid]&gt;k)</div><div class="line">       end=mid-1;</div><div class="line">           else if(mid+1 &lt; length &amp;&amp; array[mid+1] == k)&#123;</div><div class="line">               start = mid+1;</div><div class="line">           &#125;</div><div class="line">     else </div><div class="line">       return mid;</div><div class="line">     mid=(start+end)&gt;&gt;1;</div><div class="line">   &#125;</div><div class="line">   return -1;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;统计一个数字在排序数组中出现的次数。&lt;/p&gt;
&lt;h4 id=&quot;思路分析-解法一&quot;&gt;&lt;a href=&quot;#思路分析-解法一&quot; c
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>滑动窗口的最大值</title>
    <link href="http://www.myzwl.win/2017/10/08/offer_30/"/>
    <id>http://www.myzwl.win/2017/10/08/offer_30/</id>
    <published>2017-10-08T06:48:51.000Z</published>
    <updated>2017-11-04T10:49:20.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，那么一共存在6个滑动窗口，他们的最大值分别为{4,4,6,6,6,5}； 针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： {[2,3,4],2,6,2,5,1}， {2,[3,4,2],6,2,5,1}， {2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}， {2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>我的想法是先设置一个变量k用来记录每个滑动窗口的起始位置，如第一个滑动窗口k=0；然后取出数组中相应滑动窗口大小的数组的最大值，目前用选择排序思想取出每个滑动窗口最大值，如第一个[2,3,4]最大值为4，然后通过循环条件k与size，当k+size大于数组长度，也就是遍历完所有滑动窗口，每次都将每个窗口最大值保存起来即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">import java.util.ArrayList;</div><div class="line">public class Solution &#123;</div><div class="line">   public ArrayList&lt;Integer&gt; maxInWindows(int [] num, int size)</div><div class="line">    &#123;</div><div class="line">        ArrayList&lt;Integer&gt; array=new ArrayList&lt;Integer&gt;();</div><div class="line">        if(num==null||size&lt;=0)return array;</div><div class="line">        int len=num.length;</div><div class="line">        int k=0;</div><div class="line">       while(k+size&lt;=len)&#123;</div><div class="line">          array.add(maxInWindow(num,k,size));</div><div class="line">          k++;</div><div class="line">       &#125;</div><div class="line">   return array;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    private int maxInWindow(int[] num,int k,int size)&#123;</div><div class="line">        int i=k;</div><div class="line">        int top=num[k];</div><div class="line">        for(;i&lt;k+size;i++)&#123;</div><div class="line">            if(num[i]&gt;top)</div><div class="line">                top=num[i];</div><div class="line">        &#125;</div><div class="line">            return top;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>魔法币_网易2018校招编程题</title>
    <link href="http://www.myzwl.win/2017/09/17/face_9/"/>
    <id>http://www.myzwl.win/2017/09/17/face_9/</id>
    <published>2017-09-17T09:48:51.000Z</published>
    <updated>2017-09-19T15:59:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,但是小易现在一枚魔法币都没有,但是小易有两台魔法机器可以通过投入x(x可以为0)个魔法币产生更多的魔法币。<br>魔法机器1:如果投入x个魔法币,魔法机器会将其变为2x+1个魔法币<br>魔法机器2:如果投入x个魔法币,魔法机器会将其变为2x+2个魔法币<br>小易采购魔法神器总共需要n个魔法币,所以小易只能通过两台魔法机器产生恰好n个魔法币,小易需要你帮他设计一个投入方案使他最后恰好拥有n个魔法币。<br>输入描述:<br>输入包括一行,包括一个正整数n(1 ≤ n ≤ 10^9),表示小易需要的魔法币数量。<br>输出描述:<br>输出一个字符串,每个字符表示该次小易选取投入的魔法机器。其中只包含字符’1’和’2’。<br>输入例子1:<br>10<br>输出例子1:<br>122</p>
<h4 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h4><p>除了内存超出规定外，其余都符合算法要求<br><img src="/images/imgs4/34.jpg" alt="Alt text"><br>思路如下:</p>
<blockquote>
<p>1.先构造并初始化一个完全二叉树，如图所示<br>2.然后从左子树开始遍历二叉树，同时将遍历的结点放到一个集合中，并且将该集合也就是到该节点的路径放到另一个集合中，如果没有找到该节点，则向上（父节点）开始遍历，同时删掉向下遍历的结点和路径，然后右递归<br>3.找到指定结点后，对应也找到对应的结点路径，剩下就是观察发现，如果路径中结点的值为偶数（右子树）对应2，左子树对应1，放在一个可变字符串中<br>4.本地测试（不考虑内存消耗过大），ok</p>
</blockquote>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">public class Main&#123;</div><div class="line">    </div><div class="line">	  public static class TreeNode&#123;</div><div class="line">	        int val;</div><div class="line">	        TreeNode left;</div><div class="line">	        TreeNode right;</div><div class="line">	        </div><div class="line">	        public TreeNode(int val)&#123;</div><div class="line">	            this.val=val;</div><div class="line">	        &#125;</div><div class="line">	    &#125;</div><div class="line">	     </div><div class="line">    public static void main(String[] args) throws Exception&#123;</div><div class="line">        Main m=new Main();</div><div class="line">        BufferedReader br = new BufferedReader(new InputStreamReader(System.in ));</div><div class="line">       int n=Integer.parseInt(br.readLine());</div><div class="line">        String s=m.getpa(n,new ArrayList&lt;Integer&gt;(),new ArrayList&lt;List&lt;Integer&gt;&gt;());</div><div class="line">        System.out.println(s);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">     public String  getpa(int n,List&lt;Integer&gt;  nodes,List&lt;List&lt;Integer&gt;&gt; paths)&#123;</div><div class="line">          TreeNode root=new TreeNode(0);</div><div class="line">         if(n&lt;=0)return null;</div><div class="line">         paths=getPath(root,n,nodes,paths);      </div><div class="line">          List&lt;Integer&gt; target=paths.get(0);</div><div class="line">          StringBuilder s=new StringBuilder(); </div><div class="line">          target.remove(0);</div><div class="line">         for(Integer val:target)&#123;</div><div class="line">        	 if((val&amp;0x1)==0)    &#123;       	 </div><div class="line">                 s.append("2");             </div><div class="line">             &#125;</div><div class="line">              else&#123;            	</div><div class="line">                  s.append("1");</div><div class="line">              &#125;</div><div class="line">            </div><div class="line">         &#125;</div><div class="line">          return s.toString();</div><div class="line">      &#125;</div><div class="line">    </div><div class="line">    List&lt;List&lt;Integer&gt;&gt; getPath(TreeNode root,int n,List&lt;Integer&gt; nodes,List&lt;List&lt;Integer&gt;&gt; paths)&#123;</div><div class="line">          if(root==null)</div><div class="line">            return paths;</div><div class="line">              init(root,n);</div><div class="line">            nodes.add(root.val);</div><div class="line">         if(root.val==n)&#123;</div><div class="line">             List&lt;Integer&gt; temp=new ArrayList&lt;Integer&gt;();</div><div class="line">              for(Integer t:nodes)&#123;</div><div class="line">                  temp.add(t);</div><div class="line">              &#125;</div><div class="line">               paths.add(temp);           </div><div class="line">         &#125;</div><div class="line">        if(root.left!=null)</div><div class="line">            getPath(root.left,n,nodes,paths);</div><div class="line">        if(root.right!=null)</div><div class="line">            getPath(root.right,n,nodes,paths);        </div><div class="line">        Integer tt=nodes.remove(nodes.size()-1);</div><div class="line">         return paths;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line">    void init(TreeNode root,int n)&#123;</div><div class="line">        if(root==null)</div><div class="line">            return;</div><div class="line">        if(root.val&lt;n)</div><div class="line">            &#123;</div><div class="line">            if(2*root.val+1&lt;=n)</div><div class="line">                root.left=new TreeNode(2*root.val+1);</div><div class="line">            if(2*root.val+2&lt;=n)</div><div class="line">                root.right=new TreeNode(2*root.val+2);</div><div class="line">        &#125;</div><div class="line">        init(root.left,n);</div><div class="line">        init(root.right,n);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="奇偶倒退法"><a href="#奇偶倒退法" class="headerlink" title="奇偶倒退法"></a>奇偶倒退法</h4><p>核心思路就是从最后一个数，通过判断最后一个数是否是奇偶，来倒推，直至为0为止</p>
<blockquote>
<p>public class Main{<br>   public static void main(String[] args) {<br>        Scanner in = new Scanner(System.in);<br>        while (in.hasNext()) {<br>            int Count = in.nextInt();<br>            StringBuilder sb = new StringBuilder();<br>            while (Count &gt; 0) {<br>                if (Count % 2 == 0) {<br>                    Count = (Count - 2) / 2;<br>                    sb.append(“2”);<br>                } else {<br>                    Count = (Count - 1) / 2;<br>                    sb.append(“1”);<br>                }<br>            }<br>            System.out.println(sb.reverse().toString());<br>        }<br>    }<br>}</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,但是小易现在一枚魔法币都没有,但是小易有两台魔法机器可以通过投入
    
    </summary>
    
      <category term="笔试题" scheme="http://www.myzwl.win/categories/%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="校招笔试" scheme="http://www.myzwl.win/source/tags/%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>我的大学书单</title>
    <link href="http://www.myzwl.win/2017/09/05/my_books/"/>
    <id>http://www.myzwl.win/2017/09/05/my_books/</id>
    <published>2017-09-05T09:48:51.000Z</published>
    <updated>2017-09-13T05:39:28.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="读书的看法"><a href="#读书的看法" class="headerlink" title="读书的看法"></a>读书的看法</h4><p>真正喜欢上编程是在16年初两次大学兼职之后，一次是去某工厂做了几天的生产流水线，另一次是在快递分拣员（太坑了，几百人抢十个位置）。这两次兼职让我认识到了自身的不足，也认识到了如果自己不努力没有什么优势，也只能干着苦力廉价的劳动。<br>也很感谢网上那些开源的免费的优秀视频，像严蔚敏、马士兵、韩顺平等，还有其他许许多多，只要有耐心，会发现网上还是有许多开源的视频能帮助自己。<br>当你回过头来发现，读书能让自己学到许多，也是提升技术能力的一个重要手段。虽然看一些技术博客和视频能有帮助，但是发现自己的技术提高并没有实质性进步，原因就是缺乏系统性的阐述。<br>而学习最好的途径就是看书。<br>下面是我对读书的看法</p>
<blockquote>
<p>1 一本优秀的书籍是作者经过反复推敲、思考和总结的结果，它能系统的阐述技术并且拥有较高的质量，同时它能是我们对技术能有更全面的了解<br>2其次，书上也会在相应重要位置有相应的代码，所以可以边学习边实践<br>3.当我们在实际中遇到问题或者看到技术博客有相应的知识，会在书中有个更全面的认识<br>4.大师经典的书籍总是会把复杂的问题具体化和简单化，读他们的书就像在倾听他们勾勒的故事，就像倾听一个良师益友的经验之谈</p>
</blockquote>
<p><java编程思想第四版><br><img src="/images/imgs4/20.jpg" alt="Alt text"></java编程思想第四版></p>
<blockquote>
<p>作者： Bruce Eckel<br>标签： java基础<br>本书是一本非常经典的java基础书籍，本书主要介绍从java基础语法到最高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），同时在介绍的过程中，穿插着各种设计模式，总之，这本书是对于理解java基础非常有帮助和值得反反复复研读</p>
</blockquote>
<p>&lt;设计模式-java中的应用&gt;<br><img src="/images/imgs4/24.jpg" alt="Alt text"></p>
<blockquote>
<p>作者： 结城浩<br>标记： 设计模式<br>本书是书单中为数不多完整看完和实践的书，作者以浅显易懂的语言逐一说明了GoF的23个Design Pattern，让初次学习面向对象的读者也能立即掌握。作者以理论结合实际的思想从初学者角度阐述如何编写可复用、可扩展性的程序而且作者幽默的语言功底不得不让人佩服，总之，本书非常适合入门，而且还能收获许多</p>
</blockquote>
<p>&lt;大话数据结构&gt;<br><img src="/images/imgs4/21.jpg" alt="Alt text"></p>
<blockquote>
<p>作者：程杰<br>标记： 数据结构<br>本书是书单中为数不多完整看完和实践的书，作者以一个计算机教师教学为场景，讲解数据结构和相关算法的知识，通篇以一种趣味方式来叙述，大量引用了各种各样的生活知识来类比，并充分运用图形语言来体现抽象内容，对数据结构所涉及到的一些经典算法做到逐行分析、多算法比较。这里不得不佩服，作者将初学者引入从计算机角度去思考问题，看完之后的收获颇多，也对许多计算机底层有了进一步的认识。总之，这本书非常适合入门</p>
</blockquote>
<p><java与模式><br><img src="/images/imgs4/23.jpg" alt="Alt text"></java与模式></p>
<blockquote>
<p>作者：阎宏<br>标签： 设计模式<br>本书是我在对设计模式有了一定理解之后在看的。不得不说作者将设计模式介绍到了极致，全书详详细细的介绍了设计原则和设计模式，并就许多案例从设计角度多方位去思考并设计。总之，这是一本非常详细的关于设计模式的经典书籍</p>
</blockquote>
<p><spring实战><br><img src="/images/imgs4/27.jpg" alt="Alt text"></spring实战></p>
<blockquote>
<p>作者： Craig Walls<br>标签： spring<br>本书是一本讲解spring应用的经典书籍，目前也只看了前四章IOC和AOP，作者以勇者的故事贯穿这几章，看完之后对spring的这两个重要特性有了一个全新的认识。同时，概述非常适合作为学习指南参考书。总之，学习spring，读这本书非常有益</p>
</blockquote>
<p>&lt;剑指offer&gt;<br><img src="/images/imgs4/22.jpg" alt="Alt text"></p>
<blockquote>
<p>作者：何海涛<br>标签： 面试笔试<br>书中的65道面试题都很经典，刷完之后能对常见题型形成比较清晰的思路，而且对解决面试中的算法题有很好的帮助。也很惭愧，由于时间关系，只刷了一半的题。当然，如果认真对待每一个算法，你会发现对自己的编程有很大帮助，在你编码时，会有意识的从算法的角度去思考问题，同时考虑各种可能有隐患的情况。总之，对于算法思维的养成非常有帮助</p>
</blockquote>
<p>&lt;程序员的数学&gt;<br><img src="/images/imgs4/29.jpg" alt="Alt text"></p>
<blockquote>
<p>作者： 结城浩<br>标签： 数学与计算机<br>编程的基础是计算机科学，而计算机科学的基础是数学。本书保持作者一贯的作风，从初学者的角度去阐述问题。本书介绍了编程中常用的数学知识和一些经典的算法，慢慢的引导读者深入理解编程中的数学方法和思路，总之，结城浩先生的书总给人看完收获颇多</p>
</blockquote>
<p><java多线程设计模式><br><img src="/images/imgs4/25.jpg" alt="Alt text"></java多线程设计模式></p>
<blockquote>
<p>作者： 结城浩<br>标签： 多线程<br>本书从初学者角度介绍了java的多线程，同时包含了重要的12个线程设计模式和趣味的案例，同时，在看的过程中总是引导读者举一反三。也很惭愧，由于时间关系，只看了前几章。总之，这本书非常适合入门多线程。</p>
</blockquote>
<p>&lt;人月神话&gt;<br><img src="/images/imgs4/28.jpg" alt="Alt text"></p>
<blockquote>
<p>作者：布鲁克斯(Brooks, F. P.)<br>本书是一本在软件工程领域具有深远影响力和畅销不衰的经典著作。作者为人们管理复杂项目提供了具有洞察力的见解和各种管理经验。说来也惭愧，本书是在认真学习完&lt;软件工程&gt;这本书看的，由于时间的原因也只是浅尝了一下经典之作。但是这本书启发我们做工程类，一定要有软件工程的思想和全局观，而不能盲目的只重视编程这一阶段。而且按照软件工程的规范来，才能更好做出一个合格的项目。</p>
</blockquote>
<h4 id="毕业前努力浅尝的目标书单"><a href="#毕业前努力浅尝的目标书单" class="headerlink" title="毕业前努力浅尝的目标书单"></a>毕业前努力浅尝的目标书单</h4><p>&lt;深入理解java虚拟机&gt;<br><img src="/images/imgs4/30.jpg" alt="Alt text"></p>
<blockquote>
<p>作者：周志明<br>标签 ： jvm<br>作为一个优秀的java程序员，此书是必读之作，不动java底层运行机制，就不会洞悉如何优化。惭愧，还没读过，不做过多评论。</p>
</blockquote>
<p><algorithms 4th="" edition=""><br><img src="/images/imgs4/31.jpg" alt="Alt text"></algorithms></p>
<blockquote>
<p>作者：Robert Sedgewick/Kevin Wayne<br>标签： 算法<br>算法是程序的灵魂。而本书是作为算法领域经典的参考书，所以是一本必读之物。惭愧，还没读过，不做过多评论。</p>
</blockquote>
<p><effective java=""><br><img src="/images/imgs4/32.jpg" alt="Alt text"></effective></p>
<blockquote>
<p>作者： Joshua Bloch<br>标签： java基础<br>本书对编程中需要注意的点做了很好的总结，如果不想被自己的烂代码坑的话，此书是必读之物。惨愧，还没读过，不做过多评论。</p>
</blockquote>
<p>&lt;分布式Java应用 :基础与实践&gt;<br><img src="/images/imgs4/33.jpg" alt="Alt text"></p>
<blockquote>
<p>作者： 林昊<br>标签： 分布式<br>本书是分布式系统开发的入门之作，作者是淘宝网架构师，主要是以理论联系实践为主。惨愧，还没读过，不做过多评论。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;读书的看法&quot;&gt;&lt;a href=&quot;#读书的看法&quot; class=&quot;headerlink&quot; title=&quot;读书的看法&quot;&gt;&lt;/a&gt;读书的看法&lt;/h4&gt;&lt;p&gt;真正喜欢上编程是在16年初两次大学兼职之后，一次是去某工厂做了几天的生产流水线，另一次是在快递分拣员（太坑了，几百人
    
    </summary>
    
      <category term="个人感想" scheme="http://www.myzwl.win/categories/%E4%B8%AA%E4%BA%BA%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="学习历程" scheme="http://www.myzwl.win/source/tags/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
    
  </entry>
  
</feed>
