<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秒西</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.myzwl.win/"/>
  <updated>2017-12-02T17:14:36.000Z</updated>
  <id>http://www.myzwl.win/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx笔记之一</title>
    <link href="http://www.myzwl.win/2017/11/06/Nginx_1/"/>
    <id>http://www.myzwl.win/2017/11/06/Nginx_1/</id>
    <published>2017-11-06T06:48:51.000Z</published>
    <updated>2017-12-02T17:14:36.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>Nginx是一款轻量级的web服务器/反向代理服务器及电子邮件代理服务器，其特点是占有内存少，并发能力强可以反向代理和负载均衡等等，总之功能强大</p>
<h4 id="linux下环境搭建"><a href="#linux下环境搭建" class="headerlink" title="linux下环境搭建"></a>linux下环境搭建</h4><p>不多说，实践是检验真理的唯一标准。</p>
<blockquote>
<p>1.上传文件到服务器（我用的是nginx-1.6.2.tar。gz）<br>2解压到特定文件下，tar -zxvf nginx-1.6.2.tar.gz -C /usr/local<br>3.下载需要的依赖库文件<br>安装gcc g++的依赖库<br>apt-get install build-essential<br>apt-get install libtool<br>安装 pcre依赖库<br>sudo apt-get update<br>sudo apt-get install libpcre3 libpcre3-dev<br>安装 zlib依赖库<br>apt-get install zlib1g-dev<br>安装 ssl依赖库<br>apt-get install openssl<br>4在解压后的nginx目录下进行configure配置 ./configure –prefix=/usr/local/nginx-1.13.0(此处如果报错，可能是缺少依赖库)<br>5编译与安装 make&amp;&amp;make install<br>6.启动nginx，在nignx目录下主要有四个文件<br>conf配置文件、html网页文件、logs日志文件、sbin主要二进制程序<br>启动命令：在sbin目录下 ./nginx<br>关闭命令 ./nginx -s stop 重启 ./nginx -s reload<br>7测试 输入你的服务器ip地址，如果出现欢迎页面表示安装成功</p>
</blockquote>
<p><img src="/images/imgs5/17.jpg" alt="Alt text"></p>
<h4 id="nginx配置文件简单说明"><a href="#nginx配置文件简单说明" class="headerlink" title="nginx配置文件简单说明"></a>nginx配置文件简单说明</h4><p>基本上完玩nginx就是在玩配置，首先得先了解一下配置中的一些说明,主要在conf目录下的ngnx.conf里<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line">#user  nobody;</div><div class="line"></div><div class="line">#开启进程数 &lt;=CPU数 </div><div class="line">worker_processes  1;</div><div class="line"></div><div class="line">#错误日志保存位置</div><div class="line">#error_log  logs/error.log;</div><div class="line">#error_log  logs/error.log  notice;</div><div class="line">#error_log  logs/error.log  info;</div><div class="line"></div><div class="line">#进程号保存文件</div><div class="line">#pid        logs/nginx.pid;</div><div class="line"></div><div class="line">#每个进程最大连接数（最大连接=连接数x进程数）每个worker允许同时产生多少个链接，默认1024</div><div class="line">events &#123;</div><div class="line">    worker_connections  1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">	#文件扩展名与文件类型映射表</div><div class="line">    include       mime.types;</div><div class="line">	#默认文件类型</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">	#日志文件输出格式 这个位置相于全局设置</div><div class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</div><div class="line">                      '$status $body_bytes_sent "$http_referer" '</div><div class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</div><div class="line"></div><div class="line">	#请求日志保存位置</div><div class="line">    #access_log  logs/access.log  main;</div><div class="line">	</div><div class="line">	#打开发送文件</div><div class="line">    sendfile        on;</div><div class="line">    #tcp_nopush     on;</div><div class="line"></div><div class="line">    #keepalive_timeout  0;</div><div class="line">	#连接超时时间</div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">	#打开gzip压缩</div><div class="line">    #gzip  on;</div><div class="line">	</div><div class="line">	#设定请求缓冲</div><div class="line">	#client_header_buffer_size 1k;</div><div class="line">	#large_client_header_buffers 4 4k;</div><div class="line">	</div><div class="line">	#设定负载均衡的服务器列表</div><div class="line">	#upstream myproject &#123;</div><div class="line">		#weigth参数表示权值，权值越高被分配到的几率越大</div><div class="line">		#max_fails 当有#max_fails个请求失败，就表示后端的服务器不可用，默认为1，将其设置为0可以关闭检查</div><div class="line">		#fail_timeout 在以后的#fail_timeout时间内nginx不会再把请求发往已检查出标记为不可用的服务器</div><div class="line">	#&#125;</div><div class="line">	</div><div class="line">    #webapp</div><div class="line">    #upstream myapp &#123;   </div><div class="line">  	# server 192.168.1.171:8080 weight=1 max_fails=2 fail_timeout=30s;   </div><div class="line">	# server 192.168.1.172:8080 weight=1 max_fails=2 fail_timeout=30s;   </div><div class="line">    #&#125; </div><div class="line"></div><div class="line">	#配置虚拟主机，基于域名、ip和端口</div><div class="line">    server &#123;</div><div class="line">		#监听端口</div><div class="line">        listen       80;</div><div class="line">		#监听域名</div><div class="line">        server_name  localhost;</div><div class="line"></div><div class="line">        #charset koi8-r;</div><div class="line">		</div><div class="line">		#nginx访问日志放在logs/host.access.log下，并且使用main格式（还可以自定义格式）</div><div class="line">        #access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">		#返回的相应文件地址</div><div class="line">        location / &#123;</div><div class="line">            #设置客户端真实ip地址</div><div class="line">            #proxy_set_header X-real-ip $remote_addr;		</div><div class="line">			#负载均衡反向代理</div><div class="line">			#proxy_pass http://myapp;</div><div class="line">			</div><div class="line">			#返回根路径地址（相对路径:相对于/usr/local/nginx/）</div><div class="line">            root   html;</div><div class="line">			#默认访问文件</div><div class="line">            index  index.html index.htm;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">		#配置反向代理tomcat服务器：拦截.jsp结尾的请求转向到tomcat</div><div class="line">        #location ~ \.jsp$ &#123;</div><div class="line">        #    proxy_pass http://192.168.1.171:8080;</div><div class="line">        #&#125;		</div><div class="line">		</div><div class="line">        #error_page  404              /404.html;</div><div class="line">        # redirect server error pages to the static page /50x.html</div><div class="line">        #</div><div class="line">		</div><div class="line">		#错误页面及其返回地址</div><div class="line">        error_page   500 502 503 504  /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">            root   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">   </div><div class="line"></div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	#虚拟主机配置：</div><div class="line">	server &#123;</div><div class="line">		listen 1234;</div><div class="line">		server_name zwl.com;</div><div class="line">		location / &#123;		</div><div class="line">						</div><div class="line">			root zwl.com;</div><div class="line">			index index.html;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		</div><div class="line">		#配置访问日志</div><div class="line">		access_log logs/zwl.com.access.log main;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h4><p>access_log logs/zwl.com.access.log main;<br>其中第二个是日志路径相对于conf的，可以自定义，第三个是日志格式与下面对应</p>
<blockquote>
<p>#日志文件输出格式 这个位置相于全局设置<br>    log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘;</p>
</blockquote>
<h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><p><img src="/images/imgs5/18.jpg" alt="Alt text"><br>通俗的讲就是我们访问代理服务器，然后代理服务器为我们选择访问哪台服务器<br>而正向代理就是我们访问另一台服务器，但是过程是通过访问另一台代理服务器，代理服务器访问目标服务器，然后把结果返回给源服务器<br>这里有一个问题，就是如果不设置的话，返还给tomcat的就是代理服务器的ip，所以需要设置</p>
<p> #设置客户端真实ip地址<br> proxy_set_header X-real-ip $remote_addr;<br> 通过&lt;%=request.getHeader(“X-real-ip”) %&gt;得到真实服务器ip地址<br>简单的代理就是在location中通过关键字配置</p>
<blockquote>
<pre><code>location / {
     root   html;
     index  index.html index.htm;
 }
</code></pre><p>location /test  {<br> proxy_pass <a href="http://111.230.246.xx:8080/libra/" target="_blank" rel="external">http://111.230.246.xx:8080/libra/</a>;<br>}</p>
</blockquote>
<p>其中 location后面的配置可以使用正则表达式进行配置，这里含义是<a href="http://111.230.246.xx/与http://111.230.246.xx/test代理到不同的网址" target="_blank" rel="external">http://111.230.246.xx/与http://111.230.246.xx/test代理到不同的网址</a></p>
<h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p>通俗的讲就是访问量大了，分担给其它服务器。nginx的负载均衡也是配置一下</p>
<blockquote>
<p>#设定负载均衡的服务器列表</p>
<pre><code>#upstream myproject {
    #weigth参数表示权值，权值越高被分配到的几率越大
    #max_fails 当有#max_fails个请求失败，就表示后端的服务器不可用，默认为1，将其设置为0可以关闭检查
    #fail_timeout 在以后的#fail_timeout时间内nginx不会再把请求发往已检查出标记为不可用的服务器
#}    
#webapp
#upstream myapp {   
  # server 192.168.1.171:8080 weight=1 max_fails=2 fail_timeout=30s;   
# server 192.168.1.172:8080 weight=1 max_fails=2 fail_timeout=30s;   
#} 
</code></pre></blockquote>
<p> 其中第二参数是带负载的服务器，其他参数的策略不止这些，这里只是简单的策略</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p> nginx的功能远不止这些，它是一个高性能的服务器架设<br> 对于高性能网站 ,请求量大，可以通过nginx的一下方法支撑<br>1动静分离，在nginx里建立一个静态资源站点<br>2: 利用浏览器缓存等,减少查询.<br>3.对于不可避免的请求—-服务器集群+负载均衡来支撑.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;Nginx是一款轻量级的web服务器/反向代理服务器及电子邮件代理服务器，其特点是占有内存少，并发能力强可以反向代理和负载均衡等等，总之功能
    
    </summary>
    
      <category term="分布式" scheme="http://www.myzwl.win/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="nginx" scheme="http://www.myzwl.win/source/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>redis笔记之二</title>
    <link href="http://www.myzwl.win/2017/11/05/redis_2/"/>
    <id>http://www.myzwl.win/2017/11/05/redis_2/</id>
    <published>2017-11-05T06:48:51.000Z</published>
    <updated>2017-12-02T17:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Jedis初识"><a href="#Jedis初识" class="headerlink" title="Jedis初识"></a>Jedis初识</h4><p>通俗的讲就是通过java代码来操作redis<br>首先需要导入common-pool.jar会让jedis-2.7.0.jar<br>单实例连接</p>
<blockquote>
<p>//设置ip的端口号，已经开启linux上redis远程连接<br>Jedis redis=new Jedis(“111.230.246.xx”, 6379);<br>//设置数据<br>redis.set(“zwl”, “hello world”);<br>//获取数据，此时已经在linux客户端设置了键name的值<br>System.out.println(redis.get(“zwl”));<br>System.out.println(redis.get(“name”));<br>//释放资源<br>redis.close();</p>
</blockquote>
<p>连接池连接</p>
<blockquote>
<p>   //获取连接池配置对象，设置配置项<br>        JedisPoolConfig config=new JedisPoolConfig();<br>        //最大连接数<br>        config.setMaxTotal(30);<br>        //最大空闲连接数<br>        config.setMaxIdle(10);<br>        //获取连接池<br>        JedisPool jedispool=new JedisPool(config, “111.230.246.33”, 6379);<br>       //获取核心对象<br>        Jedis jedis=null;<br>        try {<br>            jedis=jedispool.getResource();<br>            jedis.set(“age”, “18”);<br>            System.out.println(jedis.get(“age”));<br>        } catch (Exception e) {<br>            // TODO: handle exception<br>        }finally{<br>            if(jedis!=null){<br>                jedis.close();<br>            }<br>            if(jedispool!=null)<br>                jedispool.close();<br>        }<br>    }</p>
</blockquote>
<p>当然jedis有很多接口，目前只应用一小部分</p>
<h4 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a>字符串（String）</h4><p>字符串类型是Redis中最为基础的数据存储类型，它在Redis中是二进制安全的，这    便意味着该类型可以接受任何格式的数据，如JPEG图像数据或Json对象描述信息等。    在Redis中字符串类型的Value最多可以容纳的数据长度是512M<br><img src="/images/imgs5/9.jpg" alt="Alt text"><br>1）set key value：设定key持有指定的字符串value，如果该key存在则进行覆盖    操作。总是返回”OK”<br>2）get key：获取key的value。如果与该key关联的value不是String类型，redis    将返回错误信息，因为get命令只能用于获取String value；如果该key不存在，返回null。<br>3）getset key value：先获取该key的值，然后在设置该key的值。<br>4）incr key：将指定的key的value原子性的递增1.如果该key不存在，其初始值    为0，在incr之后其值为1。如果value的值不能转成整型，如hello，该操作将执    行失败并返回相应的错误信息。<br>5）decr key：将指定的key的value原子性的递减1.如果该key不存在，其初始值    为0，在incr之后其值为-1。如果value的值不能转成整型，如hello，该操作将执    行失败并返回相应的错误信息。<br><img src="/images/imgs5/10.jpg" alt="Alt text"></p>
<h4 id="存储list类型"><a href="#存储list类型" class="headerlink" title="存储list类型"></a>存储list类型</h4><p>在Redis中，List类型是按照插入顺序排序的字符串链表。和数据结构中的普通链表    一样，我们可以在其头部(left)和尾部(right)添加新的元素。在插入时，如果该键并不    存在，Redis将为该键创建一个新的链表。与此相反，如果链表中所有的元素均被移    除，那么该键也将会被从数据库中删除。List中可以包含的最大元素数量是    4294967295<br><img src="/images/imgs5/11.jpg" alt="Alt text"><br>1）lpush key value1 value2…：在指定的key所关联的list的头部插入所有的    values，如果该key不存在，该命令在插入的之前创建一个与该key关联的空链    表，之后再向该链表的头部插入数据。插入成功，返回元素的个数。<br>2）rpush key value1、value2…：在该list的尾部添加元素<br>3）lrange key start end：获取链表中从start到end的元素的值，start、end可    为负数，若为-1则表示链表尾部的元素，-2则表示倒数第二个，依次类推…<br>4）lpushx key value：仅当参数中指定的key存在时（如果与key管理的list中没    有值时，则该key是不存在的）在指定的key所关联的list的头部插入value。<br>5）rpushx key value：在该list的尾部添加元素<br>6）lpop key：返回并弹出指定的key关联的链表中的第一个元素，即头部元素。<br>7）rpop key：从尾部弹出元素。<br><img src="/images/imgs5/12.jpg" alt="Alt text"></p>
<h4 id="存储sets类型"><a href="#存储sets类型" class="headerlink" title="存储sets类型"></a>存储sets类型</h4><p>在Redis中，我们可以将Set类型看作为没有排序的字符集合，和List类型一样，我    们也可以在该类型的数据值上执行添加、删除或判断某一元素是否存在等操作。需要    说明的是，这些操作的时间是常量时间。Set可包含的最大元素数是4294967295<br>和List类型不同的是，Set集合中不允许出现重复的元素。和List类型相比，Set类    型在功能上还存在着一个非常重要的特性，即在服务器端完成多个Sets之间的聚合计    算操作，如unions、intersections和differences。由于这些操作均在服务端完成，    因此效率极高，而且也节省了大量的网络IO开销<br>1）sadd key value1、value2…：向set中添加数据，如果该key的值已有则不会      重复添加<br>2）smembers key：获取set中所有的成员<br>3）scard key：获取set中成员的数量<br>4）sismember key member：判断参数中指定的成员是否在该set中，1表示存      在，0表示不存在或者该key本身就不存在<br>5）srem key member1、member2…：删除set中指定的成员<br>6）srandmember key：随机返回set中的一个成员<br>7）sdiff sdiff key1 key2：返回key1与key2中相差的成员，而且与key的顺序有      关。即返回差集<br>8）sdiffstore destination key1 key2：将key1、key2相差的成员存储在              destination上<br>9）sinter key[key1,key2…]：返回交集。<br>10）sinterstore destination key1 key2：将返回的交集存储在destination上<br>11）sunion key1、key2：返回并集。</p>
<h4 id="存储sortedset"><a href="#存储sortedset" class="headerlink" title="存储sortedset"></a>存储sortedset</h4><p>Sorted-Sets和Sets类型极为相似，它们都是字符串的集合，都不允许重复的成员出    现在一个Set中。它们之间的主要差别是Sorted-Sets中的每一个成员都会有一个分    数(score)与之关联，Redis正是通过分数来为集合中的成员进行从小到大的排序。然    而需要额外指出的是，尽管Sorted-Sets中的成员必须是唯一的，但是分数(score)    却是可以重复的。<br>1）zadd key score member score2 member2 … ：将所有成员以及该成员的        分数存放到sorted-set中<br>2）zcard key：获取集合中的成员数量<br>3）zcount key min max：获取分数在[min,max]之间的成员<br>zincrby key increment member：设置指定成员的增加的分数。<br>zrange key start end [withscores]：获取集合中脚标为start-end的成员，[withscores]参数表明返回的成员包含其分数。<br>zrangebyscore key min max [withscores] [limit offset count]：返回分数在[min,max]的成员并按照分数从低到高排序。[withscores]：显示分数；[limit offset count]：offset，表明从脚标为offset的元素开始并返回count个成员。<br>zrank key member：返回成员在集合中的位置。<br>zrem key member[member…]：移除集合中指定的成员，可以指定多个成员。<br>zscore key member：返回指定成员的分数</p>
<h4 id="存储hash"><a href="#存储hash" class="headerlink" title="存储hash"></a>存储hash</h4><p>Redis中的Hashes类型可以看成具有String Key和String Value的map容器。所    以该类型非常适合于存储值对象的信息。如Username、Password和Age等。如果    Hash中包含很少的字段，那么该类型的数据也将仅占用很少的磁盘空间。每一个Hash    可以存储4294967295个键值对。<br><img src="/images/imgs5/13.jpg" alt="Alt text"><br>1）hset key field value：为指定的key设定field/value对（键值对）。<br>  2）hgetall key：获取key中的所有filed-vaule<br>3）hget key field：返回指定的key中的field的值<br>4）hmset key fields：设置key中的多个filed/value<br>5）hmget key fileds：获取key中的多个filed的值<br>6）hexists key field：判断指定的key中的filed是否存在<br>7）hlen key：获取key所包含的field的数量<br>8）hincrby key field increment：设置key中filed的值增加increment，如：age增加20<br><img src="/images/imgs5/14.jpg" alt="Alt text"></p>
<h4 id="keys的通用操作"><a href="#keys的通用操作" class="headerlink" title="keys的通用操作"></a>keys的通用操作</h4><p>key pattern：获取所有与pattern匹配的key，返回所有与该key匹配的keys，*表示所有，？表示任意一个<br><img src="/images/imgs5/15.jpg" alt="Alt text"></p>
<h4 id="redis特性"><a href="#redis特性" class="headerlink" title="redis特性"></a>redis特性</h4><p>一个redis实例可以包括多个数据库，客户端可以连接某个redis实例的哪个数据库，就好比一个mysql中创建多个数据库，客户端连接时指定哪个数据库，一个redis最多提供16个数据库，默认是第0个数据库，命令太多，就不罗列了</p>
<h4 id="redis事务"><a href="#redis事务" class="headerlink" title="redis事务"></a>redis事务</h4><p>multi：开启事务用于标记事物的开始，其后执行的命令都将被存入命令队列，直到执行exec时，这些命令才会被原子的执行，类似关系型数据库中的begin transaction<br>exec：提交事务，类似commit<br>discard：类似rollback<br><img src="/images/imgs5/16.jpg" alt="Alt text"></p>
<h4 id="redis持久化"><a href="#redis持久化" class="headerlink" title="redis持久化"></a>redis持久化</h4><p>redis的高性能是由于其将所有数据存储在内存中，为了使redis重启之后仍能保证数据不丢失，需要将数据从内存中同步到硬盘中，就是持久化，有两种持久化方式<br>1.RDB持久化（默认）<br>在指定的时间间隔内将内存中的数据快照写入磁盘<br>2。AOF持久化<br>以日志的形式记录服务器所处理的每一个操作，在redis服务器启动之初会读取该文件来重构数据库</p>
<p>RDB优势<br>1.性能最大化，避免每次都进行io操作<br>2,。如果数据集很大，启动效率更高<br>劣势：<br>会出现数据丢失</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>redis的功能和内容是丰富和强大的，这里只是做了一个最简单的总结</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Jedis初识&quot;&gt;&lt;a href=&quot;#Jedis初识&quot; class=&quot;headerlink&quot; title=&quot;Jedis初识&quot;&gt;&lt;/a&gt;Jedis初识&lt;/h4&gt;&lt;p&gt;通俗的讲就是通过java代码来操作redis&lt;br&gt;首先需要导入common-pool.jar会让j
    
    </summary>
    
      <category term="分布式" scheme="http://www.myzwl.win/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="redis" scheme="http://www.myzwl.win/source/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis笔记之一</title>
    <link href="http://www.myzwl.win/2017/11/04/redis_1/"/>
    <id>http://www.myzwl.win/2017/11/04/redis_1/</id>
    <published>2017-11-04T06:48:51.000Z</published>
    <updated>2017-12-02T17:14:40.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="NoSQL简介"><a href="#NoSQL简介" class="headerlink" title="NoSQL简介"></a>NoSQL简介</h4><p>全称是Not Only SQL,泛指菲关系型数据库，它是通过键值对存储数据并且将数据存储在内存中。而像mysql，sql server这些通过关系表存数据的就叫关系型数据库</p>
<h4 id="为什么需要NoSQL"><a href="#为什么需要NoSQL" class="headerlink" title="为什么需要NoSQL"></a>为什么需要NoSQL</h4><p>主要传统的关系型数据库暴露了许多问题<br>1.对数据库高并发读写的需求<br>高并发就是同一时间有许多用户访问同一网站造成访问量太大容易造成服务器崩溃，而传统的解决方法就是搭建集群，通俗的讲就是原先一个服务器提供服务，现在变成多个服务器提供服务</p>
<p>2.高负载-对海量数据的高效率存储和访问的需求<br>通俗的讲就是数据量非常大，造成没地方存储或者访问查询sql的语句超过上千万造成查询非常低下</p>
<p>3.高扩展-对数据库的高可扩展性和高可用性的需求<br>通俗的讲相当于银行窗口排队，刚开始一个窗口不能满足需求，后来增加多个窗口，而增加窗口不会造成业务上的不同，也就是集群起来很方便</p>
<h4 id="主流的NoSQL产品"><a href="#主流的NoSQL产品" class="headerlink" title="主流的NoSQL产品"></a>主流的NoSQL产品</h4><p>主要有四大类<br>1.键值（key-value）存储数据库<br>主流产品：redis<br>典型应用：内容缓存，主要用于处理大量数据的高访问负载<br>优势：快速查询<br>劣势：存储的数据缺少结构化</p>
<p>2.列存储数据库<br>主流产品：HBase<br>典型应用：分布式的文件系统<br>优势：查询速度快，可扩展性强，更容易进行分布式扩展<br>劣势：功能相对局限</p>
<p>3.文档数据库<br>主流产品：MongoDB<br>典型应用：web应用<br>优势：数据结构要求不严格<br>劣势：查询效率不高，而且缺乏统一的查询语法</p>
<p>4.图形数据库<br>主流产品：Neo4j<br>典型应用：社交网络<br>优势：利用图结构相关算法<br>劣势：不容易做分布式集群的方案</p>
<h4 id="NoSQL特点"><a href="#NoSQL特点" class="headerlink" title="NoSQL特点"></a>NoSQL特点</h4><p>在大数据存取上具备关系型数据库无法比拟的性能优势<br>1.易扩展<br>2.大数据量，高性能<br>3.灵活的数据模型<br>4.高可用</p>
<h4 id="redis简介"><a href="#redis简介" class="headerlink" title="redis简介"></a>redis简介</h4><p>redis是用c语言开发的一个开源的高性能键值对数据库它通过提供多种键值数据类型来适应不同场景下的存储需求，主要支持字符串、散列、列表、集合、有序集合数据类型<br>主要应用在如下场景<br>1.缓存（数据查询、商品内容等等）<br>2.聊天室的在线好友列表<br>3.任务队列（秒杀、抢购等等）<br>4.应用排行榜<br>5.网站访问统计<br>6.数据过期处理<br>7.分布式集群架构中的session分离</p>
<h4 id="redis的环境搭建"><a href="#redis的环境搭建" class="headerlink" title="redis的环境搭建"></a>redis的环境搭建</h4><p>在windows下很方便，直接解压windows版本redis，里面有个服务端和客户端，先开启服务端，在操控客户端即可<br>下面是在linux下的redis安装</p>
<blockquote>
<p>1.将redis-3.0.0.tar.gz上传到Linux系统中<br>2.安装gcc编译环境 sudo apt-get install gcc<br>3.解压到/usr/local下  tar -xvf redis-3.0.0.tar.gz -C /usr/local<br>4）进入redis-3.0.0目录 使用make命令编译redis<br>5.在redis-3.0.0目录中 使用make PREFIX=/usr/local/redis install命令安装redis到/usr/local/redis中<br>6）拷贝redis-3.0.0中的redis.conf到安装目录redis中<br>7）启动redis 在bin下执行命令redis-server redis.conf<br>8.测试，开启另一个客户端，在bin目录下执行 ./redis-cli<br>如果出现ip号则证明安装成功</p>
</blockquote>
<p>这里需要改进的几个地方，服务端是在前端启动应改为后端启动，可以通过修改配置文件 配置redis后台启动，即服务器启动了但不会    穿件控制台窗口<br>将redis.conf文件中的daemonize从false修改成true表示后台启动<br>如需远程连接redis，需配置redis端口6379在linux防火墙中开发<br>/sbin/iptables -I INPUT -p tcp –dport 6379 -j ACCEPT<br>最后通过测试发现远程连接也成功了</p>
<h4 id="redis停止"><a href="#redis停止" class="headerlink" title="redis停止"></a>redis停止</h4><p>有两种方法，一种是空过查询进程pid，然后杀死进程<br>ps -ef | grep redis<br>kill -9 pid</p>
<p>另一种是在客户端通过<br>shutdown命令关闭redis</p>
<p><img src="/images/imgs5/8.jpg" alt="Alt text"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;NoSQL简介&quot;&gt;&lt;a href=&quot;#NoSQL简介&quot; class=&quot;headerlink&quot; title=&quot;NoSQL简介&quot;&gt;&lt;/a&gt;NoSQL简介&lt;/h4&gt;&lt;p&gt;全称是Not Only SQL,泛指菲关系型数据库，它是通过键值对存储数据并且将数据存储在内存中。而
    
    </summary>
    
      <category term="分布式" scheme="http://www.myzwl.win/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="redis" scheme="http://www.myzwl.win/source/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云linux服务器上搭建javaweb站点</title>
    <link href="http://www.myzwl.win/2017/11/03/linux_2/"/>
    <id>http://www.myzwl.win/2017/11/03/linux_2/</id>
    <published>2017-11-03T06:48:51.000Z</published>
    <updated>2017-11-30T05:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>我一直坚信没有过程就不会有好的结果。回顾大学期间的学习历程，关于别人访问自己的站点，从刚开始的基于swing的cs系统，到基于socket的聊天框，再到局域网访问的web与在分别虚拟机和双系统的linux下搭建web，到后来基于nat123的p2p访问，再到后来阿里云的window8 server服务器搭建java web站点，到最后的腾讯云linux服务器集成，每一次的探索，都是与踩坑做斗战，也是进步最快的方法。不多说，这里记录一下之前搭建的步骤</p>
<h4 id="远程连接工具"><a href="#远程连接工具" class="headerlink" title="远程连接工具"></a>远程连接工具</h4><p>故名思议，举世通过远程的方式去连接Linux并操作它，Linux远程的操作工具有很多。像xshell、Puttty、secureCRT、SSH Secure等，一般情况下习惯用命令去控制，所以这里选择了SSH Secure。该工具是免费的图形化界面及命令行窗口集一身的远程工具，具体可以去网上下载。</p>
<h4 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h4><p>步骤：<br>1）查看当前Linux系统是否已经安装java<br>输入 rpm -qa | grep java<br>2）卸载两个openJDK<br>输入rpm -e –nodeps 要卸载的软件<br>如果未安装直接跳过前面两个步骤<br>3）上传jdk到linux（我的是Ubuntu Server 16.04.1 LTS 64位注意版本问题）<br>4.解压jdk到/usr/local下 tar –xvf jdk-7u71-linux-i586.tar.gz –C /usr/local<br>5 配置jdk环境变量，打开/etc/profile配置文件，将下面配置拷贝进去，这个一定要用vi打开，gedit可能会不行</p>
<blockquote>
<p>#set java environment<br>    JAVA_HOME=/usr/local/jdk1.7.0_71<br>    CLASSPATH=.:$JAVA_HOME/lib.tools.jar<br>    PATH=$JAVA_HOME/bin:$PATH<br>    export JAVA_HOME CLASSPATH PATH</p>
</blockquote>
<p>6）重新加载/etc/profile配置文件 source /etc/profile</p>
<h4 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h4><p>必选要先安装jdk<br>1）上传Tomcat到linux上<br>2）解压Tomcat到/usr/local下<br>3.cd 到/usr/local下，将apache-tomcat-7.0.57改名成tomcat，为了方便，可自定义名<br>mv apache-tomcat-7.0.57 tomcat<br>4.开放Linux的对外访问的端口8080<br>/sbin/iptables -I INPUT -p tcp –dport 8080 -j ACCEPT<br>/etc/rc.d/init.d/iptables save 关闭防火墙，这里不成功没关系，我的没成功但是可以正常运行<br>5）启动关闭Tomcat<br>进入tomcat的bin下启动：./startup.sh<br>进入tomcat的bin下关闭：./shutdown.sh</p>
<h4 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h4><p>1 sudo apt-get install mysql-server<br>运行完这句命令后，不是root的话会要你输入root密码，密码输入正确后，系统就自动给你下载MySQL了<br>2.授权用户，并允许远程登录<br>mysql -u root -p<br>系统会要你输入密码，密码输入无误后，进入MySQL<br>远程登录mysql的权限<br>登录mysql后输入如下命令：<br>grant all privileges on <em>.</em> to ‘账户名称’ @’%’ identified by ‘密码’;<br>然后更新数据库<br>flush privileges;<br>用管理员权限编辑一下文件<br>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf<br>添加’#’注释掉其中的”bind-address = 127.0.0.1”<br>注释后:wq保存，重启MySQL服务：<br>service mysql restart<br>但是这里仍然不能远程连接，后来找到了解决办法<br>更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”:<br>切换数据库,<br>mysql&gt;use mysql;<br>查看root账号的登录权限,<br>mysql&gt;select host, user from user;<br>修改登录权限<br>mysql&gt;update user set host = ‘%’ where user = ‘root’;<br>刷新,生效,最后一步,至关重要<br>mysql&gt;flush   privileges;</p>
<p>最后解决了</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>有时候别人的步骤不一定适合你，造成很多时候都需要自己去踩坑，去探索。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;我一直坚信没有过程就不会有好的结果。回顾大学期间的学习历程，关于别人访问自己的站点，从刚开始的基于swing的cs系统，到基于socket的
    
    </summary>
    
      <category term="linux" scheme="http://www.myzwl.win/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.myzwl.win/source/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux命令小结</title>
    <link href="http://www.myzwl.win/2017/11/02/linux_1/"/>
    <id>http://www.myzwl.win/2017/11/02/linux_1/</id>
    <published>2017-11-02T06:48:51.000Z</published>
    <updated>2017-11-29T07:43:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p><img src="/images/imgs5/5.jpg" alt="Alt text"></p>
<h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><p>cd 进入某个目录。 如cd use<br>cd ../    切换到上一层目录<br>cd /    切换到系统根目录<br>cd ~    切换到用户主目录<br>cd -    切换到上一个所在目录</p>
<h4 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h4><p>mkdir 创建文件夹<br>rmdir 删除文件夹 文件夹有内容时不可删</p>
<h4 id="查看目录"><a href="#查看目录" class="headerlink" title="查看目录"></a>查看目录</h4><p>ls 看到该目录下的所有的目录和文件<br>ls -a 可以看到该目录下的所有文件和目录，包括隐藏的<br>ls -l或者ll或者ls -alh 可以看到该目录下的所有目录和文件的详细信息<br>ls z* 显示所有文件名以z开头的文件<br>ls z? 显示文件名只有两个字母且第一个字符为z的文件<br>ls &gt;2.txt 重定向 将ls的内容显示在2.txt中<br>ls &gt;&gt;2.txt 将ls的内容追加在2.txt中</p>
<h4 id="寻找目录"><a href="#寻找目录" class="headerlink" title="寻找目录"></a>寻找目录</h4><p>find ./ -name ‘zw*’ 显示当前目录下文件名以zw的开头的文件</p>
<h4 id="修改目录的名称"><a href="#修改目录的名称" class="headerlink" title="修改目录的名称"></a>修改目录的名称</h4><p>mv 目录名称 新目录名称<br>如 mv zwl zwlzwl<br>注意：mv的语法不仅可以对目录进行重命名而且也可以对各种文件，压缩包等进重命名的操作</p>
<h4 id="移动目录的位置—剪切"><a href="#移动目录的位置—剪切" class="headerlink" title="移动目录的位置—剪切"></a>移动目录的位置—剪切</h4><p>mv 目录名称 目录的新位置<br>如 mv 1.txt ../<br>注意：mv语法不仅可以对目录进行剪切操作，对文件和压缩包等都可执行剪切操作</p>
<h4 id="拷贝与删除目录"><a href="#拷贝与删除目录" class="headerlink" title="拷贝与删除目录"></a>拷贝与删除目录</h4><p>cp 复制文件，格式：cp 源文件 目标文件<br>rm 删除文件 （rm 文件夹 -r 递归删除文件夹内所有内容，并删除文件夹）<br>强制删除，使用rm -rf newTest</p>
<h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><p>touch 1.txt 创建1.txt文件<br>cat 1.txt 查看1.txt里的内容<br>more 1.txt 1.txt内容过多时，分页显示<br>less 1.txt，可以使用键盘上的PgUp和PgDn向上    和向下翻页，q结束查看<br>tail -10 1.txt 查看后10行，Ctrl+C结束</p>
<h4 id="解压打包"><a href="#解压打包" class="headerlink" title="解压打包"></a>解压打包</h4><p>Linux中的打包文件一般是以.tar结尾的，压缩的命令一般是以.gz结尾的。<br>而一般情况下打包和压缩是一起进行的，打包并压缩后的文件的后缀名一般.tar.gz。<br>命令：tar -zcvf 打包压缩后的文件名 要打包压缩的文件<br>tar -zcvf xxx.tar.gz aaa.txt bbb.txt ccc.txt<br>或：tar -zcvf xxx.tar.gz /test/*<br>解压压缩包<br>tar -zxvf FileName.tar.gz 压缩到本目录<br>tar -zxvf xxx.tar.gz -C /usr——C代表指定解压的位置</p>
<h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><p>pwd 显示当前所在位置<br>grep 要搜索的字符串 要搜索的文件 –color（搜索命令）<br>ps -ef 查看当前系统中运行的进程<br>kill -9 进程的pid 强制杀死某进程<br>命令：|   将前一个命令的输出作为本次目录的输入<br>如 ps -ef | grep system 查看当前系统中所有的进程中包括system字符串的进程<br>ifconfig  查看当前系统的网卡信息<br>ping 查看与某台机器的连接情况<br>netstat -an 查看当前系统的端口使用</p>
<h4 id="Linux的权限命令"><a href="#Linux的权限命令" class="headerlink" title="Linux的权限命令"></a>Linux的权限命令</h4><p>之前用ll的命令可以查看文件的详细信息<br><img src="/images/imgs5/6.jpg" alt="Alt text"><br>d：代表目录<br>-：代表文件<br>l：代表链接（可以认为是window中的快捷方式）<br>后面的9位分为3组，每3位置一组，分别代表属主的权限，与当前用户同组的    用户的权限，其他用户的权限<br>r：代表权限是可读，r也可以用数字4表示<br>w：代表权限是可写，w也可以用数字2表示<br>x：代表权限是可执行，x也可以用数字1表示<br><img src="/images/imgs5/7.jpg" alt="Alt text"><br>修改文件/目录的权限的命令：chmod<br>chmod u=rwx，g=rw，o=r 1.txt<br>或者 chmod 764 2.txt</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/imgs5/5.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;cd&quot;
    
    </summary>
    
      <category term="linux" scheme="http://www.myzwl.win/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.myzwl.win/source/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>浅谈lucene</title>
    <link href="http://www.myzwl.win/2017/11/01/lucene_1/"/>
    <id>http://www.myzwl.win/2017/11/01/lucene_1/</id>
    <published>2017-11-01T06:48:51.000Z</published>
    <updated>2017-11-27T05:10:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>不知不觉，从九月份后就已经很少写博总结了，有点小颓废了。好吧，回到正题，本着应用为主，了解原理为辅的原则总结。<br>以我的微型论坛中的文章内容检索为例作为应用<a href="http://www.slycmiaoxi.xyz" target="_blank" rel="external">网站链接</a></p>
<h4 id="全文检索定义"><a href="#全文检索定义" class="headerlink" title="全文检索定义"></a>全文检索定义</h4><p>全文检索首先对要搜索的文档进行分词，然后形成索引，通过查询索引来查询文档，比如：字典<br>字典的偏旁部首页，就类似于luence的索引<br>字典的具体内容，就类似于luence的文档内容<br>同时，Lucene是一个工具包，它不能独立运行，不能单独对外提供服务。说白了，就是几个jar包</p>
<h4 id="Lucene实现全文检索的流程"><a href="#Lucene实现全文检索的流程" class="headerlink" title="Lucene实现全文检索的流程"></a>Lucene实现全文检索的流程</h4><p><img src="/images/imgs5/1.jpg" alt="Alt text"><br>其主要分为索引流程和搜索流程<br>索引流程：采集数据—文档处理-存储到索引库中<br>搜索流程：输入查询条件—通过lucene的查询器查询索引—从索引库中取出结果</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><p>需求：对进入论坛的所有文章进行全文检索<br>首先我们利用jdbc采集数据库，为了方便直接利用中文查询器，只贴出核心代码<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">public interface LuceneService &#123;</div><div class="line">	    //初始化采集本地数据</div><div class="line">		public void getIndex() throws Exception;</div><div class="line">		//增加一个term到本地数据</div><div class="line">		public void addIndex(Comment bc)  throws Exception ;</div><div class="line">		//删除一个term</div><div class="line">		public void deleteIndex(String blogId) throws Exception;</div><div class="line">		//更新本地数据</div><div class="line">		public void updateIndex(Blogcomment bc) throws Exception;</div><div class="line">		//根据条件查询数据		</div><div class="line">		public List&lt;Comment&gt; findAllIndex(String q)throws Exception;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 评论实体类</div><div class="line"> * @author zwl</div><div class="line"> *</div><div class="line"> */</div><div class="line">public class Comment &#123;</div><div class="line">	</div><div class="line">    private Date commentDate;</div><div class="line">    </div><div class="line">	private String content;</div><div class="line">	</div><div class="line">	private int id;</div><div class="line">	</div><div class="line">	private String title;</div><div class="line">	</div><div class="line">	private String userIp;</div><div class="line">	</div><div class="line">	private String username;</div><div class="line">	</div><div class="line">	private int hasread;    //访问量</div><div class="line">	</div><div class="line">	private int state;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>下面是其实现类<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div></pre></td><td class="code"><pre><div class="line">@Service("luceneService")</div><div class="line">public class LuceneServiceImpl implements LuceneService &#123;</div><div class="line"></div><div class="line">	@Resource</div><div class="line">	private CommentMapper commentMapper;</div><div class="line">	</div><div class="line">	private Directory dir;</div><div class="line">	</div><div class="line">	//得到索引维护核心对象</div><div class="line">	private IndexWriter getWriter() throws Exception &#123;</div><div class="line">		File indexFile = new File("C:\\lucene\\");</div><div class="line">		Directory d=FSDirectory.open(indexFile);</div><div class="line">		 Analyzer analyzer =new IKAnalyzer();</div><div class="line">		 IndexWriterConfig conf=new IndexWriterConfig(Version.LUCENE_4_9_1, analyzer);</div><div class="line">			IndexWriter write=new IndexWriter(d, conf);</div><div class="line">			return write;</div><div class="line">&#125;</div><div class="line">	</div><div class="line">	public void addIndex(Comment bc)  throws Exception &#123;</div><div class="line">		IndexWriter write=getWriter();</div><div class="line">		Document document=new Document();</div><div class="line">		</div><div class="line">		// store:如果是yes，则说明存储到文档域中</div><div class="line">		Field id=new TextField("id",String.valueOf(bc.getId()), Store.YES);</div><div class="line">		Field username=new TextField("username",bc.getUsername(),Store.YES);</div><div class="line">		Field blogCommentDate=new TextField("commentDate",bc.getCommentDate().toLocaleString(),Store.YES);</div><div class="line">		Field content=new TextField("content",bc.getContent(),Store.YES);</div><div class="line">		Field title=new TextField("title",bc.getTitle(),Store.YES);</div><div class="line">		Field hasread=new TextField("hasread",bc.getHasread()+"",Store.YES);</div><div class="line">		Field state=new TextField("state",bc.getState()+"",Store.YES);	</div><div class="line">	             </div><div class="line">     // 将field域设置到Document对象中</div><div class="line">		document.add(id);</div><div class="line">		document.add(username);</div><div class="line">		document.add(blogCommentDate);</div><div class="line">		document.add(content);</div><div class="line">		document.add(title);</div><div class="line">		document.add(hasread);</div><div class="line">		document.add(state);</div><div class="line">					</div><div class="line">					write.addDocument(document);</div><div class="line">	             write.close();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public List&lt;Comment&gt; findAllIndex(String q)throws Exception&#123;</div><div class="line">		File indexFile = new File("C:\\lucene\\");</div><div class="line">		dir=FSDirectory.open(indexFile);</div><div class="line">		IndexReader reader = DirectoryReader.open(dir);</div><div class="line">		IndexSearcher searcher = new IndexSearcher(reader);</div><div class="line">		QueryParser parser = new QueryParser("content",</div><div class="line">				 new IKAnalyzer());</div><div class="line">		Query query = parser.parse(q);</div><div class="line">		TopDocs topDocs = searcher.search(query, 5);</div><div class="line">		List&lt;Comment&gt; list=new ArrayList&lt;Comment&gt;();</div><div class="line">		Comment cc=null;</div><div class="line">		// 根据查询条件匹配出的记录总数</div><div class="line">		int count = topDocs.totalHits;</div><div class="line">		System.out.println("匹配出的记录总数:" + count);</div><div class="line">		// 根据查询条件匹配出的记录</div><div class="line">		ScoreDoc[] scoreDocs = topDocs.scoreDocs;</div><div class="line">		for (ScoreDoc scoreDoc : scoreDocs) &#123;</div><div class="line">			// 获取文档的ID</div><div class="line">			int docId = scoreDoc.doc;</div><div class="line">			// 通过ID获取文档</div><div class="line">			Document doc = searcher.doc(docId);</div><div class="line">			cc=new Comment();</div><div class="line">			cc.setId(Integer.parseInt(doc.get("id")));</div><div class="line">			cc.setUsername( doc.get("username"));</div><div class="line">			cc.setTitle(doc.get("title"));</div><div class="line">			cc.setCommentDate(DateUtil.formatString(doc.get("commentDate"),"yyyy-MM-dd HH:mm"));</div><div class="line">			cc.setHasread(Integer.parseInt(doc.get("hasread")));	 </div><div class="line">		    cc.setContent(doc.get("content"));</div><div class="line">		    list.add(cc);</div><div class="line">		&#125;</div><div class="line">		// 关闭资源</div><div class="line">		reader.close();</div><div class="line">	return list;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	//删除指定博客的索引</div><div class="line">			public void deleteIndex(String blogId) throws Exception &#123;</div><div class="line">				IndexWriter write=getWriter();</div><div class="line">				write.deleteDocuments(new Term("id",blogId));</div><div class="line">				write.commit();</div><div class="line">				write.close();</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			//更新博客索引</div><div class="line">			public void updateIndex(Blogcomment bc) throws Exception &#123;</div><div class="line">				IndexWriter write=getWriter();</div><div class="line">				Document document=new Document();</div><div class="line">				</div><div class="line">				// store:如果是yes，则说明存储到文档域中</div><div class="line">							Field id=new TextField("id",String.valueOf(bc.getId()), Store.YES);</div><div class="line">							Field username=new TextField("username",bc.getUsername(),Store.YES);</div><div class="line">							Field blogCommentDate=new TextField("blogCommentDate",bc.getBlogCommentDate().toLocaleString(),Store.YES);</div><div class="line">							Field comments=new TextField("comments",bc.getComments(),Store.YES);</div><div class="line">							Field title=new TextField("title",bc.getComment().getTitle(),Store.YES);</div><div class="line">							Field hasread=new TextField("hasread",bc.getComment().getHasread()+"",Store.YES);</div><div class="line">							Field cid=new TextField("cid",bc.getComment().getId()+"",Store.YES);	</div><div class="line">			             </div><div class="line">							// 将field域设置到Document对象中</div><div class="line">							document.add(id);</div><div class="line">							document.add(username);</div><div class="line">							document.add(blogCommentDate);</div><div class="line">							document.add(comments);</div><div class="line">							document.add(title);</div><div class="line">							document.add(hasread);</div><div class="line">							document.add(cid);</div><div class="line">							</div><div class="line">							write.updateDocument(new Term("id",bc.getId()+""), document);</div><div class="line">			               write.close();</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">	//初始化采集本地数据</div><div class="line">	public void getIndex() throws Exception&#123;</div><div class="line">	</div><div class="line">		// 采集数据</div><div class="line">				List&lt;Comment&gt; list=commentMapper.readAll();</div><div class="line">				</div><div class="line">				// 将采集到的数据封装到Document对象中</div><div class="line">				List&lt;Document&gt; docList=new ArrayList&lt;Document&gt;();</div><div class="line">				Document document=null;</div><div class="line">				for(Comment bc:list)&#123;</div><div class="line">					document=new Document();</div><div class="line">					// store:如果是yes，则说明存储到文档域中</div><div class="line">					Field id=new TextField("id",String.valueOf(bc.getId()), Store.YES);</div><div class="line">					Field username=new TextField("username",bc.getUsername(),Store.YES);</div><div class="line">					Field blogCommentDate=new TextField("commentDate",bc.getCommentDate().toLocaleString(),Store.YES);</div><div class="line">					Field content=new TextField("content",bc.getContent(),Store.YES);</div><div class="line">					Field title=new TextField("title",bc.getTitle(),Store.YES);</div><div class="line">					Field hasread=new TextField("hasread",bc.getHasread()+"",Store.YES);</div><div class="line">					Field state=new TextField("state",bc.getState()+"",Store.YES);</div><div class="line">					</div><div class="line">					</div><div class="line">					// 将field域设置到Document对象中</div><div class="line">					document.add(id);</div><div class="line">					document.add(username);</div><div class="line">					document.add(blogCommentDate);</div><div class="line">					document.add(content);</div><div class="line">					document.add(title);</div><div class="line">					document.add(hasread);</div><div class="line">					document.add(state);</div><div class="line">					</div><div class="line">					docList.add(document);			</div><div class="line">				&#125;</div><div class="line">				</div><div class="line">				IndexWriter write=this.getWriter();</div><div class="line">				// 通过IndexWriter对象将Document写入到索引库中</div><div class="line">				for(Document doc:docList)&#123;</div><div class="line">					write.addDocument(doc);</div><div class="line">				&#125;</div><div class="line">				// 关闭writer</div><div class="line">				write.close();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="索引文件的逻辑结构"><a href="#索引文件的逻辑结构" class="headerlink" title="索引文件的逻辑结构"></a>索引文件的逻辑结构</h4><p><img src="/images/imgs5/2.jpg" alt="Alt text"><br>通过图示，可以发现最重要的就是文档域和索引域<br>文档域存储的信息就是采集到的信息，通过Document对象来存储，具体说是通过Document对象中field域来存储数据。<br>比如：数据库中一条记录会存储一个一个Document对象，数据库中一列会存储成Document中一个field域。<br>索引域主要是为了搜索使用的。索引域内容是经过lucene分词之后存储的（这里的分词根据所引入的分词器不同，分词效果不一样）<br>传统方法是先找到文件，如何在文件中找内容，在文件内容中匹配搜索关键字，这种方法是顺序扫描方法，数据量大就搜索慢<br>但是lucene采用倒排索引结构，它是在索引中匹配搜索关键字，由于索引内容量有限并且采用固定优化算法搜索速度很快，找到了索引中的词汇，词汇与文档关联，从而最终找到了文档。</p>
<h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><p><img src="/images/imgs5/3.jpg" alt="Alt text"><br>其中，IndexWriter是索引过程的核心组件，通过IndexWriter可以创建新索引、更新索引、删除索引操作。IndexWriter需要通过Directory对索引进行存储操作。<br>Directory描述了索引的存储位置，底层封装了I/O操作，负责对索引进行存储。它是一个抽象类，它的子类常用的包括FSDirectory（在文件系统存储索引）、RAMDirectory（在内存存储索引）。</p>
<h4 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h4><p>Lucene中分词主要分为两个步骤：分词、过滤<br>分词：将field域中的内容一个个的分词。<br>过滤：将分好的词进行过滤，比如去掉标点符号、大写转小写、词的型还原（复数转单数、过去式转成现在式）、停用词过滤<br>停用词：单独应用没有特殊意义的词。比如的、啊、等，英文中的this is a the等等。</p>
<h4 id="搜索流程"><a href="#搜索流程" class="headerlink" title="搜索流程"></a>搜索流程</h4><p><img src="/images/imgs5/4.jpg" alt="Alt text"><br>Field的属性，主要有三个<br>是否分词（Tokenized）<br>是：对该field存储的内容进行分词，分词的目的，就是为了索引。<br>是否索引（Indexed）<br>是：将分好的词进行索引，索引的目的，就是为了搜索<br>是否存储（Stored）<br>是：将field域中的内容存储到文档域中。存储的目的，就是为了搜索页面显示取值用的。</p>
<h4 id="创建查询对象的方式"><a href="#创建查询对象的方式" class="headerlink" title="创建查询对象的方式"></a>创建查询对象的方式</h4><p>通过QueryParser来创建查询对象（其他方式就不介绍了）<br>通过QueryParser来创建query对象，可以指定分词器，搜索时的分词器和创建该索引的分词器一定要一致。还可以输入查询语句。<br>查询语法<br>1、基础的查询语法，关键词查询：<br>域名+“：”+搜索的关键字<br>例如：content:java<br>2、范围查询<br>域名+“:”+[最小值 TO 最大值]<br>例如：size:[1 TO 1000]<br>3、组合条件查询<br>条件1 AND 条件2<br>条件1 OR 条件2<br>条件1 NOT 条件2</p>
<h4 id="TopDocs"><a href="#TopDocs" class="headerlink" title="TopDocs"></a>TopDocs</h4><p>Lucene搜索结果可通过TopDocs遍历<br>earch方法需要指定匹配记录数量n：indexSearcher.search(query, n)<br>TopDocs.totalHits：是匹配索引库中所有记录的数量<br>TopDocs.scoreDocs：匹配相关度高的前边记录数组，scoreDocs的长度小于等于search方法指定的参数n</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>当然lucene的知识体系远不止这些，这里只是通过应用主导学习来浅尝全文检索。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;不知不觉，从九月份后就已经很少写博总结了，有点小颓废了。好吧，回到正题，本着应用为主，了解原理为辅的原则总结。&lt;br&gt;以我的微型论坛中的文章
    
    </summary>
    
      <category term="全文检索" scheme="http://www.myzwl.win/categories/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/"/>
    
    
      <category term="全文检索" scheme="http://www.myzwl.win/source/tags/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>丑数</title>
    <link href="http://www.myzwl.win/2017/10/22/offer_44/"/>
    <id>http://www.myzwl.win/2017/10/22/offer_44/</id>
    <published>2017-10-22T06:48:51.000Z</published>
    <updated>2017-11-07T10:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>把只包含因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>由丑数的定义知道丑数只有以上三个因子，所以在排序的丑数列表中，后面的某个丑数一定是前面某个丑数乘以2或3或5的结果，所以我们以这三个因子的到的丑数进行排序，把最小的丑数更新到丑数列表中，如果刚好是丑数中的最小值，则把该数对应的下标加1，然后继续寻找下一个丑数</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">public int GetUglyNumber_Solution(int index) &#123;</div><div class="line">       if(index&lt;=0)return 0;</div><div class="line">       int[] ugly=new int[index];</div><div class="line">       ugly[0]=1;</div><div class="line">       int count=1;</div><div class="line">       int num2=0;</div><div class="line">       int num3=0;</div><div class="line">       int num5=0;</div><div class="line">       while(count&lt;index)&#123;</div><div class="line">           int min=IsUglyNumber(ugly[num2]*2,ugly[num3]*3,ugly[num5]*5);</div><div class="line">           ugly[count]=min;</div><div class="line">           count++;</div><div class="line">           if(min==ugly[num2]*2)</div><div class="line">               num2++;</div><div class="line">           if(min==ugly[num3]*3)</div><div class="line">               num3++;</div><div class="line">           if(min==ugly[num5]*5)</div><div class="line">               num5++;</div><div class="line">       &#125;    </div><div class="line">       return ugly[index-1];</div><div class="line">   &#125;</div><div class="line">   </div><div class="line">   private int IsUglyNumber(int num2,int num3,int num5)&#123;</div><div class="line">       int min=num2&lt;num3?num2:num3;</div><div class="line">       return min&lt;num5?min:num5;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;把只包含因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含因子7。 习惯上我们
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>左旋转字符串</title>
    <link href="http://www.myzwl.win/2017/10/21/offer_43/"/>
    <id>http://www.myzwl.win/2017/10/21/offer_43/</id>
    <published>2017-10-21T06:48:51.000Z</published>
    <updated>2017-11-07T10:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，请你把其循环左移K位后的序列输出。例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？OK，搞定它！</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>我的想法是构造两个字符数组，一个用来保存要移位的字符集，另一个是不移位的字符，最后将其按照顺序保存在一个新的字符数组中即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">public String LeftRotateString(String str,int n) &#123;</div><div class="line">      if(str==null||str.equals("")||n&gt;str.length())</div><div class="line">          return "";</div><div class="line">      if(n==0)</div><div class="line">          return str;</div><div class="line">          char[] s1=new char[n];</div><div class="line">      char[] s2=new char[str.length()-n];</div><div class="line">      char[] s3=str.toCharArray();</div><div class="line">      for(int i=0;i&lt;str.length();i++)&#123;</div><div class="line">          if(i&gt;=0&amp;&amp;i&lt;n)</div><div class="line">              s1[i]=s3[i];</div><div class="line">          else</div><div class="line">              s2[i-n]=s3[i];</div><div class="line">      &#125;</div><div class="line">      StringBuffer sb=new StringBuffer(str.length());</div><div class="line">      for(int i=0;i&lt;s2.length;i++)</div><div class="line">          sb.append(s2[i]);</div><div class="line">      for(int i=0;i&lt;s1.length;i++)</div><div class="line">          sb.append(s1[i]);</div><div class="line">      return sb.toString();</div><div class="line">  &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>翻转单词顺序列</title>
    <link href="http://www.myzwl.win/2017/10/20/offer_42/"/>
    <id>http://www.myzwl.win/2017/10/20/offer_42/</id>
    <published>2017-10-20T06:48:51.000Z</published>
    <updated>2017-11-07T09:19:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一天他向Fish借来翻看，但却读不懂它的意思。例如，“student. a am I”。后来才意识到，这家伙原来把句子单词的顺序翻转了，正确的句子应该是“I am a student.”。Cat对一一的翻转这些单词顺序可不在行，你能帮助他么？</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>关于这个题目，有很多种解法，其中一个解法是利用倒序，即从数组的最后一个数开始依次加入到stringBuffer中即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public String ReverseSentence(String str) &#123;</div><div class="line">       if(str == null)&#123; return null;&#125;</div><div class="line">        if(str.trim().equals(""))&#123;</div><div class="line">           return str;</div><div class="line">       &#125;</div><div class="line">           String[] s=str.split(" ");</div><div class="line">       StringBuffer sb=new StringBuffer(s.length);</div><div class="line">       for(int i=s.length-1;i&gt;=0;i--)&#123;</div><div class="line">           if(i!=0)</div><div class="line">           sb.append(s[i]+" ");</div><div class="line">           else</div><div class="line">               sb.append(s[i]);</div><div class="line">       &#125;</div><div class="line">       return sb.toString();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>扑克牌顺子</title>
    <link href="http://www.myzwl.win/2017/10/19/offer_41/"/>
    <id>http://www.myzwl.win/2017/10/19/offer_41/</id>
    <published>2017-10-19T06:48:51.000Z</published>
    <updated>2017-11-07T09:15:44.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子…..LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何。为了方便起见,你可以认为大小王是0。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>先将大小王约定为0，可以补充任何相差的数字，然后进行排序并且统计出其中0的个数，然后对后面的数进行判断，如果相邻数字小于0的个数，是可以填补的，然后在减少0的个数，依次比较，直到最后连续</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">public boolean isContinuous(int [] numbers) &#123;</div><div class="line">         if(numbers==null)</div><div class="line">             return false;</div><div class="line">       Arrays.sort(numbers);</div><div class="line">       int i=0,zero=0;</div><div class="line">       for(;i&lt;numbers.length&amp;&amp;numbers[i]==0;i++)</div><div class="line">           zero++;</div><div class="line">       for(;i&lt;numbers.length-1&amp;&amp;zero&gt;=0;i++)&#123;</div><div class="line">           if(numbers[i]==numbers[i+1])</div><div class="line">               return false;</div><div class="line">           if(numbers[i]+1+zero&gt;=numbers[i+1])&#123;</div><div class="line">               zero-=numbers[i+1]-numbers[i]-1;</div><div class="line">           &#125;</div><div class="line">           else</div><div class="line">               return false;</div><div class="line">       &#125;</div><div class="line">       if(i==numbers.length -1)</div><div class="line">           return true;</div><div class="line">       else</div><div class="line">           return false;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>求1+2+3+...+n</title>
    <link href="http://www.myzwl.win/2017/10/18/offer_40/"/>
    <id>http://www.myzwl.win/2017/10/18/offer_40/</id>
    <published>2017-10-18T06:48:51.000Z</published>
    <updated>2017-11-07T09:00:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>根据题目的约束，只能使用递归操作了。当n递归到最小值1时结束，并且每次递归调用一次，值就减少1，直至n为1为止</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">private int result=0;</div><div class="line">    public int Sum_Solution(int n) &#123;</div><div class="line">        cale(n);</div><div class="line">        return result;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    private boolean cale(int n)&#123;</div><div class="line">        result+=n;</div><div class="line">        return n!=0&amp;&amp;cale(n-1);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>不用加减乘除做加法</title>
    <link href="http://www.myzwl.win/2017/10/17/offer_39/"/>
    <id>http://www.myzwl.win/2017/10/17/offer_39/</id>
    <published>2017-10-17T06:48:51.000Z</published>
    <updated>2017-11-07T08:56:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想是采用位运算，主要分为三步，比如5（101）+17（10001），第一步各位相加但不进位，得10100，第二部记下进位，的10，最后一步把前两部相加，得22（10110），根据异或和与逻辑与的运算规则，很容易知道第一步符合异或规则，第二部先与在左移一位进位即可</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public int Add(int num1,int num2) &#123;</div><div class="line">       int sum,carry;</div><div class="line">       do&#123;</div><div class="line">           sum=num1^num2;</div><div class="line">           carry=(num1&amp;num2)&lt;&lt;1;</div><div class="line">           num1=sum;</div><div class="line">           num2=carry;</div><div class="line">       &#125;while(num2!=0);</div><div class="line">       return num1;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。&lt;/p&gt;
&lt;h4 id=&quot;思路分析&quot;&gt;&lt;a h
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数组中重复的数字</title>
    <link href="http://www.myzwl.win/2017/10/16/offer_38/"/>
    <id>http://www.myzwl.win/2017/10/16/offer_38/</id>
    <published>2017-10-16T06:48:51.000Z</published>
    <updated>2017-11-07T08:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想可以相对整个数组进行排序，这样如果相邻元素一样说明是重复的，只要遍历整个数组，找到第一个相同的就找到了第一个重复的数字</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">public boolean duplicate(int numbers[],int length,int [] duplication) &#123;</div><div class="line">        if(length==0||numbers==null)</div><div class="line">        &#123;</div><div class="line">            duplication[0]=-1;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">           Arrays.sort(numbers);</div><div class="line">           for(int i=0;i&lt;numbers.length-1;i++)&#123;</div><div class="line">               if(numbers[i]==numbers[i+1])</div><div class="line">               &#123;</div><div class="line">                   duplication[0]=numbers[i];</div><div class="line">                   return true;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式匹配</title>
    <link href="http://www.myzwl.win/2017/10/15/offer_37/"/>
    <id>http://www.myzwl.win/2017/10/15/offer_37/</id>
    <published>2017-10-15T06:48:51.000Z</published>
    <updated>2017-11-07T04:21:44.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>请实现一个函数用来匹配包括’.’和’<em>‘的正则表达式。模式中的字符’.’表示任意一个字符，而’</em>‘表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串”aaa”与模式”a.a”和”ab<em>ac</em>a”匹配，但是与”aa.a”和”ab*a”均不匹配</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>先考虑模式串中有’<em>‘的情况，因为</em>可以匹配0个或多个，所以如果模式串的下一个字符是<em>的时候就有三种情况<br>1.匹配0个主串的字符，比如主串是abc，模式串是b</em>，那么下一步匹配的策略是主串保持不变，模式串跳到下两个字符重新比较，<br>2.匹配1个字符，比如主串是abc，模式串是a<em>，下一步比较策略是主串跳到下一个字符，模式串移动两个字符<br>3.匹配多个字符，比如主串aac，模式串是a</em>cb，因为只匹配aa两个字符，下一步策略是主串移动一个字符，模式串移动两个字符，如果当前字符与主串字符不能匹配，则主串不变，模式串移动两个位置<br>如果当前字符是’.’，直接按逐个字符进行比较</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public boolean match(char[] str,char[] pattern)&#123;</div><div class="line">    if(str==null||pattern==null)</div><div class="line">      return false;</div><div class="line">    return matchRegCore(str,0,str.length,pattern,0,pattern.length);</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  private boolean matchRegCore(char[] str,int i,int length1,char[] pattern,int j,int length2)&#123;</div><div class="line">    if(i==length1&amp;&amp;j==length2)&#123;</div><div class="line">      if(j==length2||pattern[j]=='*')</div><div class="line">        return true;</div><div class="line">      else</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">    if(i!=length1&amp;&amp;j==length2)</div><div class="line">      return false;</div><div class="line">    if(j+1&lt;length2&amp;&amp;pattern[j+1]=='*')&#123;</div><div class="line">      if(i&lt;length1&amp;&amp;(pattern[j]==str[i]||pattern[j]=='.'))&#123;</div><div class="line">        return matchRegCore(str,i+1,length1,pattern,j,length2)||</div><div class="line">            matchRegCore(str,i+1,length1,pattern,j+2,length2)||</div><div class="line">            matchRegCore(str,i,length1,pattern,j+2,length2);</div><div class="line">      &#125;else&#123;</div><div class="line">        return matchRegCore(str,i,length1,pattern,j+2,length2);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    if(i&lt;length1&amp;&amp;(str[i]==pattern[j]||pattern[j]=='.'))&#123;</div><div class="line">      return matchRegCore(str,i+1,length1,pattern,j+1,length2);</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;请实现一个函数用来匹配包括’.’和’&lt;em&gt;‘的正则表达式。模式中的字符’.’表示任意一个字符，而’&lt;/em&gt;‘表示它前面的
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>表示数值的字符串</title>
    <link href="http://www.myzwl.win/2017/10/14/offer_36/"/>
    <id>http://www.myzwl.win/2017/10/14/offer_36/</id>
    <published>2017-10-14T06:48:51.000Z</published>
    <updated>2017-11-07T04:07:46.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串”+100”,”5e2”,”-123”,”3.1416”和”-1E-16”都表示数值。 但是”12e”,”1a3.14”,”1.2.3”,”+-5”和”12e+4.3”都不是。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思路就是分情况讨论，主要分为三类：整数、浮点数和科学计数法。<br>对于整数的判断，就是字符串中没有出现非0到9的字符即可，否则返回错误<br>对于浮点数，只要考虑整数后面出现一个小数点，而后面的判断与整数相同，<br>对于科学计数法，就是e和E后其后面的字符串与整数一样，同时如果后面没有数字是不被允许的</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public boolean isNumeric(char[] str) &#123;</div><div class="line">        if(str==null||str.length==0)return false;</div><div class="line">        int index=0;</div><div class="line">        int length=str.length;</div><div class="line">        while(index&lt;length&amp;&amp;str[index]==' ')index++;</div><div class="line">        if(index&gt;=length)return false;</div><div class="line">        while(str[length-1]==' ')length--;</div><div class="line">        if(str[index]=='+'||str[index]=='-')index++;</div><div class="line">        if(index&gt;=length)return false;</div><div class="line">        </div><div class="line">        while(index&lt;length&amp;&amp;str[index]&gt;='0'&amp;&amp;str[index]&lt;='9')index++;</div><div class="line">        if(index==length) return true;</div><div class="line">        int index2=index;</div><div class="line">        </div><div class="line">        if(str[index]=='.')&#123;</div><div class="line">          index++;</div><div class="line">          if(index==length)return true;</div><div class="line">          index2=index;</div><div class="line">          while(index&lt;length&amp;&amp;str[index]&gt;='0'&amp;&amp;str[index]&lt;='9')index++;</div><div class="line">          if(index==index2) return false;</div><div class="line">          if(index==length) return true;</div><div class="line">        &#125;</div><div class="line">       </div><div class="line">        if(str[index]=='e'||str[index]=='E')&#123;</div><div class="line">          index++;</div><div class="line">          if(index==length)return false;</div><div class="line">          if(str[index]=='+'||str[index]=='-')index++;</div><div class="line">          index2=index;</div><div class="line">          while(index&lt;length&amp;&amp;str[index]&gt;='0'&amp;&amp;str[index]&lt;='9')index++;</div><div class="line">          if(index==index2) return false;</div><div class="line">          if(index==length) return true;</div><div class="line">        &#125;</div><div class="line">          return false;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串”+100”,”5e2”,”-123”,”3.141
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>字符流中第一个不重复的字符</title>
    <link href="http://www.myzwl.win/2017/10/13/offer_35/"/>
    <id>http://www.myzwl.win/2017/10/13/offer_35/</id>
    <published>2017-10-13T06:48:51.000Z</published>
    <updated>2017-11-07T03:57:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符”go”时，第一个只出现一次的字符是”g”。当从该字符流中读出前六个字符“google”时，第一个只出现一次的字符是”l”。<br>如果当前字符流没有存在出现一次的字符，返回#字符。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是创建一个map用来记录每个字符出现的次数，而list则记录只出现一次的字符集合，遍历字符，如果map中不存在说明是第一次，则把字符作为key加入，然后在放到list中，如果map中包含了该键，一方面记录该字符次数，另一方面看list中是否包含该元素，在删除，最后list中只保留出现一次的字符</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.HashMap;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Map;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">private Map&lt;Character, Integer&gt; map=new HashMap&lt;Character, Integer&gt;();</div><div class="line">  private List&lt;Character&gt; list=new ArrayList&lt;Character&gt;();</div><div class="line">  </div><div class="line">  //Insert one char from stringstream</div><div class="line">  public void Insert(char ch)</div><div class="line">  &#123;</div><div class="line">      if(!map.containsKey(ch))&#123;</div><div class="line">          map.put(ch, 1);</div><div class="line">          list.add(ch);</div><div class="line">      &#125;else&#123;</div><div class="line">          map.put(ch, map.get(ch)+1);</div><div class="line">          if(list.contains(ch))</div><div class="line">              list.remove(Character.valueOf(ch));</div><div class="line">      &#125;</div><div class="line">      </div><div class="line">  &#125;</div><div class="line">//return the first appearence once char in current stringstream</div><div class="line">  public char FirstAppearingOnce()</div><div class="line">  &#123;</div><div class="line">  if(list.isEmpty())return '#';</div><div class="line">  return list.get(0);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符”go”时，第一个只出现一次的字符是
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数组中只出现一次的数字</title>
    <link href="http://www.myzwl.win/2017/10/12/offer_34/"/>
    <id>http://www.myzwl.win/2017/10/12/offer_34/</id>
    <published>2017-10-12T06:48:51.000Z</published>
    <updated>2017-11-07T03:45:50.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是如果数组中元素是第一次出现，则加入集合中，继续往后遍历，如果包含该元素，则删除那个元素，最后通过筛选只剩下出现一次的元素了</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//num1,num2分别为长度为1的数组。传出参数</div><div class="line">//将num1[0],num2[0]设置为返回结果</div><div class="line">import java.util.List;</div><div class="line">import java.util.ArrayList;</div><div class="line">public class Solution &#123;</div><div class="line">   public void FindNumsAppearOnce(int [] array,int num1[] , int num2[]) &#123;</div><div class="line">          ArrayList&lt;Integer&gt; list=new ArrayList&lt;Integer&gt;();</div><div class="line">        for(int i=0;i&lt;array.length;i++)&#123;</div><div class="line">            if(list.contains(array[i]))&#123;</div><div class="line">                list.remove((Integer)array[i]);</div><div class="line">            &#125;else&#123;</div><div class="line">                list.add(array[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        num1[0]=list.get(0);</div><div class="line">        num2[0]=list.get(1);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。&lt;/p&gt;
&lt;h4 id=&quot;思路分
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>和为S的两个数字</title>
    <link href="http://www.myzwl.win/2017/10/11/offer_33/"/>
    <id>http://www.myzwl.win/2017/10/11/offer_33/</id>
    <published>2017-10-11T06:48:51.000Z</published>
    <updated>2017-11-05T04:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>输入一个递增排序的数组和一个数字S，在数组中查找两个数，是的他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是设置两个变量，起始变量start和指向尾的变量end，刚开始先比较和cur=start+end与s的和，如果比s大说明最后的end数较大，end应前移，直至小于等于，反之则是start较小，start应后移。直至最后等于为止，此时因为end处于最大的情况，所以start处于最小，也是所要找的两个数。但是如果不存在，则返回空</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public ArrayList&lt;Integer&gt; FindNumbersWithSum(int [] array,int sum) &#123;</div><div class="line">        ArrayList&lt;Integer&gt; list=new ArrayList&lt;Integer&gt;();</div><div class="line">         ArrayList&lt;Integer&gt; lists=new ArrayList&lt;Integer&gt;();</div><div class="line">        if(array==null||sum&lt;=0) return list;</div><div class="line">        int start=0;</div><div class="line">        int end=array.length-1;</div><div class="line">        int curSum=array[start]+array[end];</div><div class="line">        while(start&lt;end)&#123;</div><div class="line">            if(curSum==sum)&#123;</div><div class="line">                    list.add(array[start]);</div><div class="line">                    list.add(array[end]);</div><div class="line">                &#125;</div><div class="line">            while(curSum&gt;sum)&#123;</div><div class="line">                end--;</div><div class="line">                 curSum=array[start]+array[end];</div><div class="line">                if(curSum==sum)&#123;</div><div class="line">                    list.add(array[start]);</div><div class="line">                    list.add(array[end]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            start++;  </div><div class="line">            curSum=array[start]+array[end];</div><div class="line">        &#125;</div><div class="line">        if(list.size()==0)return list;</div><div class="line">        lists.add(list.get(0));</div><div class="line">        lists.add(list.get(1));</div><div class="line">        return lists;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;输入一个递增排序的数组和一个数字S，在数组中查找两个数，是的他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>和为S的连续正数序列</title>
    <link href="http://www.myzwl.win/2017/10/10/offer_32/"/>
    <id>http://www.myzwl.win/2017/10/10/offer_32/</id>
    <published>2017-10-10T06:48:51.000Z</published>
    <updated>2017-11-05T02:51:56.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!</p>
<h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>核心思想就是通过两个变量small（最小值）和big（最大值）来控制，比如s为12，起始samll为1，big为2，和为3小于12，说明big需要后移一位，此时为{1,2,3}为6，小于12，big在增大直至{1,2,3,4,5}为15大于12，说明最小值应该后移，所以为{2,3,4,5}，继续后移{3,4,5}满足，找到了，思路大致就是这样，但是small移动时不能超过（sum+1）/2，也就是平均值，因为超过平均值后面肯定会大于s了</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public ArrayList&lt;ArrayList&lt;Integer&gt; &gt; FindContinuousSequence(int sum) &#123;</div><div class="line">      ArrayList&lt;ArrayList&lt;Integer&gt;&gt; sqList=new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</div><div class="line">       if(sum&lt;3)return sqList;</div><div class="line">       int small=1;</div><div class="line">       int big=2;</div><div class="line">       int curSum=small+big;</div><div class="line">       int middle=(1+sum)/2;</div><div class="line">       while(small&lt;middle)&#123;</div><div class="line">           ArrayList&lt;Integer&gt; sq=new ArrayList&lt;Integer&gt;();</div><div class="line">          if(curSum==sum)&#123;</div><div class="line">               for(int i=small;i&lt;=big;i++)</div><div class="line">                   sq.add(i);</div><div class="line">           &#125;</div><div class="line">           while(curSum&gt;sum&amp;&amp;small&lt;middle)&#123;</div><div class="line">               curSum-=small;</div><div class="line">               small++;</div><div class="line">               if(curSum==sum)&#123;</div><div class="line">               for(int i=small;i&lt;=big;i++)</div><div class="line">                   sq.add(i);</div><div class="line">           &#125;</div><div class="line">           &#125;</div><div class="line"></div><div class="line">       if(sq.size()&gt;0)sqList.add(sq);</div><div class="line">       big++;</div><div class="line">       curSum+=big;</div><div class="line">       &#125;</div><div class="line">       return sqList;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>数字在排序数组中出现的次数</title>
    <link href="http://www.myzwl.win/2017/10/09/offer_31/"/>
    <id>http://www.myzwl.win/2017/10/09/offer_31/</id>
    <published>2017-10-09T06:48:51.000Z</published>
    <updated>2017-11-04T11:54:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>统计一个数字在排序数组中出现的次数。</p>
<h4 id="思路分析-解法一"><a href="#思路分析-解法一" class="headerlink" title="思路分析(解法一)"></a>思路分析(解法一)</h4><p>最直观的想法就是通过顺序查找，即依次比较数组与给定元素大小，然后设置一个计数变量，又由于数组是排序的，所以直接当比较的数大于给定数时，结束</p>
<h4 id="码上有戏"><a href="#码上有戏" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public int GetNumberOfK(int [] array , int k) &#123;</div><div class="line">         if(array==null)return 0;</div><div class="line">         int count=0;</div><div class="line">         for(int i=0;i&lt;array.length;i++)&#123;</div><div class="line">           if(array[i]==k)&#123;</div><div class="line">             count++;</div><div class="line">           &#125;</div><div class="line">           if(array[i]&gt;k)</div><div class="line">             return count;</div><div class="line">         &#125;</div><div class="line">         return count;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="思路分析-解法二"><a href="#思路分析-解法二" class="headerlink" title="思路分析(解法二)"></a>思路分析(解法二)</h4><p>由于是已排序的，所以查找最好的就是通过二分查找，即先找出第一次出现和最后一次出现该数即可，但是由于当我们找到该数时，比如第一次找到该数时，先比较在他前面是否有重复该数，如果是，这说明据需向前面比较，知道找到第一次出现该数，同理，最后一次出现该数也是比较后面是否有该数重复</p>
<h4 id="码上有戏-1"><a href="#码上有戏-1" class="headerlink" title="码上有戏"></a>码上有戏</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">public int GetNumberOfK(int [] array , int k) &#123;</div><div class="line">    int length = array.length;</div><div class="line">         if(length == 0)&#123;</div><div class="line">             return 0;</div><div class="line">         &#125;</div><div class="line">         int firstK = getFirstK(array, k, 0, length-1);</div><div class="line">         int lastK = getLastK(array, k, 0, length-1);</div><div class="line">         if(firstK != -1 &amp;&amp; lastK != -1)&#123;</div><div class="line">              return lastK - firstK + 1;</div><div class="line">         &#125;</div><div class="line">         return 0;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> private int getFirstK(int array[],int k,int start,int end)&#123;</div><div class="line">   if(start&gt;end)return -1;</div><div class="line">    int mid=(start+end)&gt;&gt;1;</div><div class="line">   if(array[mid]&gt;k)return getFirstK(array,k,start,mid-1);</div><div class="line">   else if(array[mid]&lt;k) return getFirstK(array,k,mid+1,end);</div><div class="line">       else if(mid-1 &gt;=0 &amp;&amp; array[mid-1] == k)&#123;</div><div class="line">           return getFirstK(array, k, start, mid-1);</div><div class="line">       &#125;</div><div class="line">   else return mid;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> private int getLastK(int array[],int k,int start,int end)&#123;</div><div class="line">       int length = array.length;</div><div class="line">   int mid=(start+end)&gt;&gt;1;</div><div class="line">   while(start&lt;=end)&#123;</div><div class="line">     if(array[mid]&lt;k)</div><div class="line">       start=mid+1;</div><div class="line">     else if(array[mid]&gt;k)</div><div class="line">       end=mid-1;</div><div class="line">           else if(mid+1 &lt; length &amp;&amp; array[mid+1] == k)&#123;</div><div class="line">               start = mid+1;</div><div class="line">           &#125;</div><div class="line">     else </div><div class="line">       return mid;</div><div class="line">     mid=(start+end)&gt;&gt;1;</div><div class="line">   &#125;</div><div class="line">   return -1;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;统计一个数字在排序数组中出现的次数。&lt;/p&gt;
&lt;h4 id=&quot;思路分析-解法一&quot;&gt;&lt;a href=&quot;#思路分析-解法一&quot; c
    
    </summary>
    
      <category term="剑指offer" scheme="http://www.myzwl.win/categories/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="剑指offer" scheme="http://www.myzwl.win/source/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
</feed>
